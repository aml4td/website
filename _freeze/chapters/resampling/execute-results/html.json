{
  "hash": "3027acf40ccb8ee9e0d40a4a87ee75d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\nknitr:\n  opts_chunk:\n    cache.path: \"../_cache/resampling/\"\n---\n\n\n\n\n# Measuring Performance with Resampling {#sec-resampling}\n\n\n\n\n\n\n\n\n\nIn @sec-external-validation, it was shown that using the same data to estimate and evaluate our model can produce inaccurate estimates of how well it functions. It also described using separate partitions of the data to fit and evaluate the model. \n\nThere are two general approaches for using external data for model evaluation. The first is a validation set, which we’ve seen before in @sec-three-way-split This is a good idea if you have a lot of data on hand. The second approach is to **resample** the training set. Resampling is an iterative approach that reuses the training data multiple times using sound statistical methodology. We’ll discuss both validation sets and resampling in this chapter. \n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A general data usage scheme that includes resampling. The colors denote the data used to train the model (in tan) and the separate data sets for evaluating the model (colored periwinkle).](../premade/resampling.svg){#fig-resampling-scheme fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n@fig-resampling-scheme shows a standard data usage scheme that incorporates resampling. After an initial partition, resampling creates **multiple versions** of the training set. We'll use special terminology^[These names are not universally used. We only invent new terminology to avoid confusion; people often refer to the data in our analysis set as the \"training set\" because it has the same purpose.] for the data partitions within each resample. These partitions serve the same function as the training and test sets:\n\n- The **analysis set** (of size $n_{fit}$) estimates quantities associated with preprocessing, model training, and postprocessing. \n- The **assessment set** ($n_{prd}$) is only used for prediction so that we can compute measures of model effectiveness (e.g., RMSE, classification accuracy, etc).  \n\nLike the training and test sets, the analysis and assessment sets are mutually exclusive data partitions and are different for each of the _B_ iterations of resampling. \n\nThe resampling process fits a model to an analysis set and predicts the corresponding assessment set. One or more performance statistics are calculated from these held-out predictions and saved. This process continues for _B_ iterations, and, in the end, there is a collection of _B_ statistics of efficacy. These are averaged to produce the overall **resampling estimate** of performance.  @alg-resampling formalizes this process. \n\n:::: {#alg-resampling}\n\n::: {.columns}\n\n::: {.column width=\"5%\"}\n\n:::\n\n::: {.column width=\"65%\"}\n\n\n```pseudocode\n#| label: alg-resampling\n#| html-indent-size: \"1.2em\"\n#| html-comment-delimiter: \"//\"\n#| html-line-number: true\n#| html-line-number-punc: \":\"\n#| html-no-end: false\n\\begin{algorithm}\n\\begin{algorithmic}\n\\State $\\mathfrak{D}^{tr}$: training set of predictors $X$ and outcome $y$\n\\State $B$: number of resamples\n\\State $M(\\mathfrak{D}^{tr}, B)$: a mapping function to split $\\mathfrak{D}^{tr}$ for each of  $B$ iterations.\n\\State $f()$: model pipeline \n\\Procedure{Resample}{$\\mathfrak{D}^{tr}, f, M(\\mathfrak{D}^{tr}, B)$}\n  \\For{$b =1$ \\To $B$}\n    \\State Partition $\\mathfrak{D}^{tr}$ into $\\{\\mathfrak{D}_b^{fit}, \\mathfrak{D}_b^{prd}\\}$ using $M_b(\\mathfrak{D}^{tr}, B)$.\n    \\State Train model pipeline $f$ on the analysis set to produce $\\hat{f}_{b}(\\mathfrak{D}_b^{fit})$.\n    \\State Generate assessment set predictions $\\hat{y}_b$ by applying model $\\hat{f}_{b}$ to $\\mathfrak{D}_b^{prd}$.\n    \\State Estimate performance statistic $\\hat{Q}_{b}$.\n  \\EndFor \n  \\State Compute reampling estimate $\\hat{Q} = \\sum_{b=1}^B \\hat{Q}_{b}$.\n  \\Return $\\hat{Q}$.\n\\Endprocedure\n\\end{algorithmic}\n\\end{algorithm}\n```\n\n:::\n\n::: {.column width=\"15%\"}\n\n:::\n\n::: \n\nResampling models to estimate performance. \n\n::::\n\n\n:::{.callout-note}\nIn @alg-resampling, $f()$ is the model pipeline described in @sec-model-pipeline. Any estimation methods, before, during, or after the supervised model, are executed on the analysis set _B_ times during resampling.\n:::\n\nThere are many different resampling methods, such as cross-validation and the bootstrap. They differ in how the analysis and assessment sets are created in line 7 of @alg-resampling. Subsequent sections below discuss a number of mapping functions. \n\nTwo primary aspects of resampling make it an effective tool. First, the separation of data used to create and appraise the model avoids the data reuse problem described in @sec-external-validation. \n\nSecond, using multiple iterations (_B_ > 1) means that you are evaluating your model under slightly different conditions (because the analysis and assessment sets are different). This is a bit like a \"multiversal\" science fiction story: what would have happened if the situation were slightly different before I fit the model? This lets us directly observe the model variance; how stable is it when the inputs are slightly modified? An unstable model (or one that overfits) will have a high variance.\n\nIn this chapter, we'll describe some conceptual aspects of resampling. Then, we’ll define and discuss various methods. Finally, the last section lists frequently asked questions we often hear when teaching these tools. \n\nUp until @sec-time-series-resampling, we will assume that each row of the data is independent. We’ll see examples of non-independent in the later sections.\n\n## What is Resampling Trying to Do? \n\nIt's important to understand some of the philosophical aspects of resampling. It is a statistical  procedure that tries to estimate some true, unknowable performance value (let's call it $Q$) associated with the same population of data represented by the training set. The statistic $Q$ could be RMSE, the Brier score, or any other performance statistic. \n\nThere have been ongoing efforts to understand what resampling methods do on a theoretical level. @bates2023cross is an interesting work focused on linear regression models with ordinary least squares. Their conclusion regarding resampling estimates is that they\n\n> ... cannot be viewed as estimates of the prediction error of the final model fit on the whole data. Rather, the estimate of prediction error is an estimate of the average prediction error of the final model across other hypothetical data sets from the same distribution.\n\nIt is a good idea to think that this will also be true for more complex machine learning models. The important idea is that resampling is measuring performance on training sets similar to ours (and the same size). \n\nTo understand different methods, let’s examine some theoretical properties of resampling estimates that matter to applied data analysis. \n\nLet’s start with analogy; consider the usual sample mean estimator used in basic statistics ($\\bar{x}$). Based on assumptions about the data, we can derive an equation that optimally estimates the true mean value based on some criterion. Often, the statistical theory focuses on our estimators' theoretical mean and variance. For example, if the data are independent and follow the same Gaussian distribution, the sample mean estimates the actual population mean (i.e., it is an **unbiased** estimator). We can sometimes derive what the estimator's theoretical variance is, too. These properties, or some combination of them, such as mean squared error, help guide us to the best estimator. \n\nThe same is true for resampling methods. We can understand how their bias and variances change under different circumstances and choose an appropriate technique. We'll also focus on bias and variance as the main properties of interest^[This discussion is very similar to the variance-bias tradeoff discussed in @sec-variance-bias. The context here differs, but the themes are the same.]. \n\nFirst is bias: how accurately does a resampling technique estimate the true population value $Q$? We'd like it to be unbiased, but to our knowledge, that is nearly impossible. However, some things we do know.  @fig-resampling-scheme shows that the training set (of size $n_{tr}$) is split into two partitions of size $n_{fit}$ and $n_{prd}$. It turns out that, as $n_{prd}$ becomes larger, the bias increases in a pessimistic direction^[Meaning that performance looks worse than it should. For example, smaller $R^2$ or inflated Brier score.]. In other words, if our training set has 1,000 samples, a resampling method where the assessment set has $n_{prd} = 100$ data points has a smaller bias than one using $n_{prd} = 500$. Another thing that we know is that increasing the number of resamples (_B_) can't significantly reduce the bias. \n\nThe variance (often called precision) of resampling is also important. We want to get a performance estimate that gives us consistent results if we repeat it. The resampling precision is driven mainly by _B_ and $n_{tr}$. With some resampling techniques, if your results are too noisy, you can resample more and stabilize or reduce the estimated variance (at the cost of increased computational time). We'll examine the bias and precision of different methods as we discuss each method. \n\nLet's examine a few types of resampling methods, starting with the most simple: a single validation set. \n\n## Validation Sets {#sec-validation}\n\nWe’ve already described a validation set; it is typically created via a three-way initial split^[The split can be made using the same tools already discussed, such as completely random selection, stratified random sampling, etc.] of the data (as shown in @fig-validation). For time series data, it is common to use the most recent data for the test set. Similarly, the validation set would include the most recent data (once the test set partition is created). The training set would include everything else.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![An initial data splitting scheme that incorporates a validation set.](../premade/validation.svg){#fig-validation fig-align='center' width=45%}\n:::\n:::\n\n\n\n\nWhile not precisely the same, a validation set is extremely similar to an approach described below called Monte Carlo cross-validation (MCCV). If we used a single MCCV resample, the results would be effectively the same as those of a validation set. \n\nOne aspect of using the validation set is what to do with it after you’ve made your final decision about the model pipeline. Ordinarily, the entire training set is used for the final model fit.\n\nData are precious, and, in some cases, an argument can be made that the final model fit could include the training _and_ validation set. Doing this does add some risk; your validation set statistics are no longer completely valid since they measured how well the model works with similar training sets of size $n_{tr}$. If you have an abundance of data, the risk is low, but, at the same time, the model fit won’t change much by adding $n_{val}$ data points. However, if your training data is not large, adding more data could have a profound impact, and you risk using the wrong model for your data^[Also, if $n_{tr}$ is not “large,” you shouldn’t use a validation set anyway.]. \n\n## Monte Carlo Cross-Validation {#sec-cv-mc}\n\nMonte Carlo cross-validation emulates the initial train/test partition. For each one of _B_ resamples, it takes a random sample of the training set (say about 75%) to use as the analysis set^[Again, this could be accomplished using any of the splitting techniques described in @sec-data-splitting.]. The remainder is used for model assessment. Each of the _B_ resamples is created independently of the others, so some of the training set points are included in multiple assessment sets. @fig-mccv-scheme shows a schematic of three MCCV resamples of a data set with $n_{tr} = 30$ data points and 80% of the data are allocated to the analysis set. Note that samples 16 and 17 are in multiple assessment sets. \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A schematic of three Monte Carlo cross-validation resamples created from an initial pool of 30 data points.](../premade/mc-cv.svg){#fig-mccv-scheme fig-align='center' width=65%}\n:::\n:::\n\n\n\n\n\nHow many resamples should we use, and what proportion of the data should be used for the analysis set? These choices are partly driven by computing power and training set size. Clearly, using more resamples means better precision. \n\nA thought experiment can be useful for any resampling method. Based on the proportion of data going into the assessment set, how confident would you feel in a performance metric being computed for this much data? Suppose that we are computing the RMSE for a regression model. If our assessment set contained $n_{prd} = 10$ (on average), we might think our metric’s mean is excessively noisy.   In that case, we could either increase the proportion held out (better precision, worse bias) or resample more (better precision, same bias, long computational time). \n\nEach resampling method has different trade-offs between bias and variance. Let’s look at some simulation results to help understand the trade-off for MCCV.\n\n### Another Simulation Study  {.unnumbered}\n\n@sec-complexity described a simulated data set that included 200 training set points. In that section, @fig-two-class-overfit illustrates the effect of overfitting using a particular model (KNN). This chapter will use the same training set but with a simple logistic regression model where a four-degree of freedom spline was used with each of the two predictors. \n\nSince these are simulated data, an additional, very large data set was simulated and used to approximate the model's true performance, once again evaluated using a Brier score. Our logistic model has a Brier score value of $Q \\approx$ 0.0898, which is quite good. Using this estimate, the model bias can be computed by subtracting the resampling estimate from 0.0898.\n\nThe simulation created 500 realizations of this 200 sample training set^[The simulation details, sources, and results can be found at [`https://github.com/topepo/resampling_sim`](https://github.com/topepo/resampling_sim).]. We resampled the logistic model for each and then computed the corresponding Brier score estimate from MCCV. This process was repeated using the different analysis set proportions and values of _B_ shown in @fig-mccv-stats. The left panel shows that the bias^[The percent bias is calculated as $100(Q_{true} - \\hat{Q})/Q_{true}$ for metrics where smaller is better.] decreases as the proportion of data in the analysis set becomes closer to the amount in the training set. It is also apparent that the bias is unaffected by the number of resamples (_B_). The panel on the right shows the precision, estimated using the standard error, of the resampled estimates.  This decreases nonlinearly as _B_ increases; the cost-benefit ratio of adding more resamples shows eventual diminishing returns. The amount retained for the analysis set shows that values close to one have higher precision than the others.  Regarding computational costs, the time to resample a model increases with both parameters (amount retained and _B_). \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Variance and bias statistics for simulated data using different configurations for Monte Carlo cross-validation. The range of the y-axes are common across similar plots below for different resampling techniques.](../figures/fig-mccv-stats-1.svg){#fig-mccv-stats fig-align='center' width=70%}\n:::\n:::\n\n\n\n\nThe results of this simulation indicate that, in terms of precision, there is little benefit in including more than 70% of the training set in the assessment set. Also, while more resamples always help, there is incremental benefit in using more than 50 or 60 resamples (for this size training set). Regarding bias, the decrease somewhat slows down near 80% of the training set retained. Holdout proportions of around 75% - 80% might be a reasonable rule of thumb.\n\n## V-Fold Cross-Validation {#sec-cv}\n\n**V-fold cross-validation** (sometimes called K-fold cross-validation) [@stone1974cross] is the most well-known resampling method. It randomly allocates the training data to one of _V_ groups of about equal size, called a \"fold\" (a stratified allocation can also be used). There are _B_ = _V_ iterations where the analysis set comprises _V_ -1 of the folds, and the remaining fold defines the assessment set. For example, for 10-fold cross-validation, the ten analysis sets consist of 90% of the data, and the remaining 10% are used to quantify performance. @fig-cv-scheme shows the process for _V_ = 3 (for brevity). \n\n::: {#fig-cv-scheme layout-ncol=1}\n\n![](../premade/three-CV.svg){width=45% fig-align=\"center\"}\n\n![](../premade/three-CV-iter.svg){width=60% fig-align=\"center\"}\n\nAn example of using V-fold cross-validation.\n:::\n\n@Arlot2010 is a comprehensive survey of cross-validation. \n\n\n_V_ is typically 5 or 10. Again, the choice can be driven by computational costs (smaller values of _V_ are faster) or more statistical considerations, specifically bias and variance again. _V_-fold cross-validation generally has a smaller bias than other methods but has relatively poor precision. As with MCCV, the degree of bias is determined by how much data are retained for the assessment sets (as defined by _V_). _V_ = 5 has substantial bias compared to the more common _V_ = 10. @fushiki2011estimation describes _post hoc_ methods for reducing the bias for this resampling method. For precision, it also improves when _V_ increases. \n\n\n### Repeated Cross-Validation {.unnumbered}\n\nOne way to further improve the precision is to use **repeated V-fold cross-validation**. In this case, the same sample allocation scheme is used to create the folds and this is repeated multiple times using different random number seeds. For example, two repeats of 10-fold cross-validation^[This isn’t the same as using _V_ = 20. That scheme has very different bias properties than two repetitions of _V_ = 10.] create two sets of _V_ folds, which are treated as a collection of twenty resamples (e.g., _B_ = _V_ $\\times$ _R_ for _R_ repeats). Again, increasing the number of resamples does not generally change the bias. \n\n### Leave-One-Out Cross-Validation {.unnumbered}\n\nLeave-one-out cross-validation (LOOCV, also called the jackknife) sets $V = n_{tr}$. A single sample is withheld and, over $n_{tr}$ iterations, a set of models is created, each with an analysis set of $n_{tr} - 1$ samples. The resampling estimate is created by applying the metric function to the resulting $n_{tr}$ predicted values. There are no replicate performance values; only a single $\\hat{Q}$. As one might expect, the bias is nearly zero for this method. Although it would be difficult to quantify, the standard error of the estimator should be very large. \n\nThis method is extremely computationally expensive^[However, for linear regression, the LOOCV predictions can be quickly computed without refitting a large number of models.] and is not often used in practice. \n\n### Variance and Bias for V-Fold Cross-Validation {.unnumbered}\n\n\n\n\n\n\n\n\n\n\n@fig-cv-stats shows bias and variance results from the simulation, where the x-axis is the total number of resamples $V\\times R$. As expected, the bias decreases with _V_ and is constant over the number of resamples. Five-fold cross-validation stands out as particularly bad with a percent bias of roughly 3.9%. Using ten folds decreases this to about 2.2%. The precision values show that smaller values of _V_ have better precision; 10-fold CV needs substantially more resamples to have the same standard error than _V_ = 5.. \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Variance and bias statistics for simulated data using different configurations for $V$-fold cross-validation.](../figures/fig-cv-stats-1.svg){#fig-cv-stats fig-align='center' width=70%}\n:::\n:::\n\n\n\n\nIs there any advantage to using _V_ > 10? Not much. The decrease in bias is small and many more replicates are required to reach the same precision as _V_ = 10.  For example, twice as many resamples is required for 20-fold CV to match the variance of 10-fold CV. \n\nFor this simulation, the properties are about the same when MCCV and 10-fold CV are matched in terms of number of resamples and the amount allocated to the assessment set. \n\nOur recommendation is to almost always use _V_ = 10. The bias and variance gains are both good with 10 folds. Reducing bias in 5-fold cross-validation is difficult but the 10-fold precision can be improved by increased replication. \n\n## The Bootstrap {#sec-bootstrap}\n\nThe bootstrap [@Efron1979boot;@davison1997bootstrap;@efron2003second;@EfronHastie2016a] is a resampling methodology originally created to compute the sampling distribution of statistics using minimal probabilistic assumptions^[This application will be discussed in section TODO.]. In this chapter, we'll define a bootstrap sample and show how it can be used to measure fit quality for predictive models. \n\nFor a training set with $n_{tr}$ data points, a bootstrap resample takes a random sample of the training set that is also size $n_{tr}$. It does this by sampling with replacement; when each of the $n_{tr}$ samples is drawn, it has no memory of the prior selections. This means that each row can be randomly selected again. For example, @fig-bootstrap-scheme shows another schematic for three bootstrap samples. In this figure, the thirteenth training set sample was selected to go into the first analysis set three times. For this reason, a bootstrap resample will contain multiple replicates of some training set points, while others will not be selected at all. The data that were never selected are used to create the assessment set.\n\nFor the bootstrap, we'll refer to the mean estimate (line 12 in @alg-resampling) as the \"ordinary\" estimator (others will follow shortly). \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A schematic of three bootstraps resamples created from an initial pool of 30 data points.](../premade/bootstraps.svg){#fig-bootstrap-scheme fig-align='center' width=70%}\n:::\n:::\n\n\n\n\nThe probability that a data point will be picked is $1 / n_{tr}$ and, from this, the probability that a training set point is _not selected at all_ is \n\n$$\\prod_{i=1}^{n_{tr}} \\left(1 - \\frac{1}{n_{tr}}\\right) = \\left(1 - \\frac{1}{n_{tr}}\\right)^{n_{tr}}\\approx e^{-1} = 0.368$$\n\nSince the bootstrap sample contains the _selected_ data, each training point is selected with probability $1 - e^{-1} \\approx 0.632$. The implication is that, on average, the analysis set, contains about 63.2% unique training set points and the assessment set includes, on average, 36.8% of the training data. If we were to compare the amount of unique training set points held out by the bootstrap to V-fold cross-validation, the bootstrap is comparable to using $V = 3$. \n\n@fig-boot-stats shows bias and variance for the simulated data. As one might expect, there is considerable bias in the bootstrap estimate of performance. In comparison to the corresponding plot for MCCV, the bootstrap bias is worse than the MCCV curve where 60% were held out. The curve is also flat; the bias does't go away by increasing _B_.\n\nHowever, the precision is extremely good, even with very few resamples. \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Variance and bias statistics for simulated data using different configurations for the bootstrap.](../figures/fig-boot-stats-1.svg){#fig-boot-stats fig-align='center' width=70%}\n:::\n:::\n\n\n\n\n### Correcting for Bias {.unnumbered}\n\n\n\n\n\n\n\n\n\nThere have been some attempts to de-bias the ordinary bootstrap estimate. The \"632 rule\" [@Efron1983p51] uses the ordinary bootstrap estimate ($\\hat{Q}_{bt}$) and the resubstitution estimate ($\\hat{Q}_{rsub}$) together: \n\n$$\\hat{Q}_{632} = e^{-1}\\, \\hat{Q}_{rsub} + (1 - e^{-1})\\, \\hat{Q}_{bt} = 0.368\\,\\hat{Q}_{rsub} + 0.632\\,\\hat{Q}_{bt}$$\n@fig-boot-stats shows that there is a significant drop in the bias when using this correction. The 632 estimator combines two different statistical estimates, and we only know the standard error of $\\hat{Q}_{bt}$. Therefore, the right-hand panel does not show a standard error curve for the 632 estimator.  \n\nLet's look at an average example from the simulated data sets with _B_ = 100. @tbl-bootstrap-bias has the estimator values and their intermediate values. Let's first focus on the values for the column labeld \"Logistic.\" The ordinary bootstrap estimate was $\\hat{Q}_{bt}$ = 0.101 and repredicting the training set produced $\\hat{Q}_{rsub}$ = 0.0767. The 632 estimate shifts the Brier score downward to $\\hat{Q}_{632}$ = 0.0919. This reduces the pessimistic bias; our large sample estimate of the true Brier score is 0.0898 so we are closer to that value.\n\nAnother technique, the 632+ estimator [@Efron1997tc], uses the same blending strategy but uses dynamic weights based on how much the model overfits (if at all). It factors in a model’s “no-information rate”: the metric value if the predicted and true outcome values were independent. The author gives a formula for this, but it can also be estimated using a permutation approach where we repeatedly shuffle the outcome values and compute the metric.  We will denote this value as $\\hat{Q}_{nir}$. For our simulated data set $\\hat{Q}_{nir}$ = 0.427; we believe that this is the worst case value for our metric. \n\nWe then compute the relative overfitting rate (ROR) as \n\n$$ ROR = \\frac{\\hat{Q}_{bt}-\\hat{Q}_{rsub}}{\\hat{Q}_{nir} -\\hat{Q}_{rsub}} $$\n\nThe denominator measures the range of the metric (from most optimistic to most pessimistic). The numerator measures the optimism of our ordinary estimator. A value of zero implies that the model does not overfit, and values of one indicate the opposite. For our logistic model, the ratio is 0.024 / 0.35 = 0.0686, indicating that the logistic model is not overinterpeting the training set. \n\nThe final 632+ estimator uses a different weighting system to combine estimates:  \n\n$$\n\\begin{align}\n\\hat{Q}_{632+} &= (1 - \\hat{w})\\, \\hat{Q}_{rsub} + \\hat{w}\\, \\hat{Q}_{bt} \\quad \\text{with}\\notag \\\\\n\\hat{w} &= \\frac{0.632}{1 - 0.368ROR} \\notag\n\\end{align}\n$$\nPlugging in our values, the final weight on the ordinary estimator ($w$ = 0.648) is very close to what is used by the regular 632 rule ($w$ = 0.632). The final estimate is also similar: $\\hat{Q}_{632+}$ = 0.0923. \n\n\n\n\n::: {#tbl-bootstrap-bias .cell layout-align=\"center\" tbl-cap='Bias correction values for two models on a simulated data set.'}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"uacnqvbxwx\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#uacnqvbxwx table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#uacnqvbxwx thead, #uacnqvbxwx tbody, #uacnqvbxwx tfoot, #uacnqvbxwx tr, #uacnqvbxwx td, #uacnqvbxwx th {\n  border-style: none;\n}\n\n#uacnqvbxwx p {\n  margin: 0;\n  padding: 0;\n}\n\n#uacnqvbxwx .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#uacnqvbxwx .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#uacnqvbxwx .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#uacnqvbxwx .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#uacnqvbxwx .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#uacnqvbxwx .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#uacnqvbxwx .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#uacnqvbxwx .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#uacnqvbxwx .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#uacnqvbxwx .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#uacnqvbxwx .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#uacnqvbxwx .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#uacnqvbxwx .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#uacnqvbxwx .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#uacnqvbxwx .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uacnqvbxwx .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#uacnqvbxwx .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#uacnqvbxwx .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#uacnqvbxwx .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uacnqvbxwx .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#uacnqvbxwx .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uacnqvbxwx .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#uacnqvbxwx .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uacnqvbxwx .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#uacnqvbxwx .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#uacnqvbxwx .gt_left {\n  text-align: left;\n}\n\n#uacnqvbxwx .gt_center {\n  text-align: center;\n}\n\n#uacnqvbxwx .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#uacnqvbxwx .gt_font_normal {\n  font-weight: normal;\n}\n\n#uacnqvbxwx .gt_font_bold {\n  font-weight: bold;\n}\n\n#uacnqvbxwx .gt_font_italic {\n  font-style: italic;\n}\n\n#uacnqvbxwx .gt_super {\n  font-size: 65%;\n}\n\n#uacnqvbxwx .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#uacnqvbxwx .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#uacnqvbxwx .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#uacnqvbxwx .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#uacnqvbxwx .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#uacnqvbxwx .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#uacnqvbxwx .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\" \"> </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\" \"> </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Brier Score\">\n        <span class=\"gt_column_spanner\">Brier Score</span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"1 NN\">1 NN</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Logistic\">Logistic</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"estimates\">estimates</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"estimates  statistic\" class=\"gt_row gt_left\">simple mean</td>\n<td headers=\"estimates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"estimates  brier_class_knn\" class=\"gt_row gt_right\">0.174</td>\n<td headers=\"estimates  brier_class_logistic\" class=\"gt_row gt_right\">0.101</td></tr>\n    <tr><td headers=\"estimates  statistic\" class=\"gt_row gt_left\">resubstitution</td>\n<td headers=\"estimates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"estimates  brier_class_knn\" class=\"gt_row gt_right\">0.000</td>\n<td headers=\"estimates  brier_class_logistic\" class=\"gt_row gt_right\">0.077</td></tr>\n    <tr><td headers=\"estimates  statistic\" class=\"gt_row gt_left\">(truth)</td>\n<td headers=\"estimates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"estimates  brier_class_knn\" class=\"gt_row gt_right\">0.170</td>\n<td headers=\"estimates  brier_class_logistic\" class=\"gt_row gt_right\">0.090</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"intermediates\">intermediates</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"intermediates  statistic\" class=\"gt_row gt_left\">no information rate</td>\n<td headers=\"intermediates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"intermediates  brier_class_knn\" class=\"gt_row gt_right\">0.496</td>\n<td headers=\"intermediates  brier_class_logistic\" class=\"gt_row gt_right\">0.427</td></tr>\n    <tr><td headers=\"intermediates  statistic\" class=\"gt_row gt_left\">relative overfitting rate</td>\n<td headers=\"intermediates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"intermediates  brier_class_knn\" class=\"gt_row gt_right\">0.351</td>\n<td headers=\"intermediates  brier_class_logistic\" class=\"gt_row gt_right\">0.069</td></tr>\n    <tr><td headers=\"intermediates  statistic\" class=\"gt_row gt_left\">weights</td>\n<td headers=\"intermediates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"intermediates  brier_class_knn\" class=\"gt_row gt_right\">0.726</td>\n<td headers=\"intermediates  brier_class_logistic\" class=\"gt_row gt_right\">0.648</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"4\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"final estimates\">final estimates</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"final estimates  statistic\" class=\"gt_row gt_left\">632</td>\n<td headers=\"final estimates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"final estimates  brier_class_knn\" class=\"gt_row gt_right\">0.110</td>\n<td headers=\"final estimates  brier_class_logistic\" class=\"gt_row gt_right\">0.092</td></tr>\n    <tr><td headers=\"final estimates  statistic\" class=\"gt_row gt_left\">632+</td>\n<td headers=\"final estimates  blank\" class=\"gt_row gt_right\">   </td>\n<td headers=\"final estimates  brier_class_knn\" class=\"gt_row gt_right\">0.126</td>\n<td headers=\"final estimates  brier_class_logistic\" class=\"gt_row gt_right\">0.092</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\nThe simulations studies shown here in @fig-boot-stats replicated what @Molinaro2005p47 found; the 632+ rule has bias properties about the same as 10-fold cross-validation. \n\nHow do these bias corrected estimators work when there is extreme overfitting? One way to tell is to consider a 1-nearest neighbor model. In this case, re-predicting the training set predicts every data point with its outcome value (i.e., a “perfect” model). For the Brier score, this means $\\hat{Q}_{rsub}$ is zero. @tbl-bootstrap-bias shows the rest of the computations. For this model $Q\\approx$ 0.17 and the ordinary estimate comes close: $\\hat{Q}_{bt}$ = 0.174. \n\nThe 632 estimate is $\\hat{Q}_{632} = 0.632\\,\\hat{Q}_{bt} =$ 0.11; this is too much bias reduction as it overshoots the true value by a large margin. The 632+ estimator is slightly better. The ROR value is higher (0.351) leading to a higher weight on the ordinary estimator to produce $\\hat{Q}_{632+}$ = 0.126.\n\nShould we use the bootstrap to compare models? Its small variance is enticing, but the bias remains an issue. The bias is likely to change as a function of the magnitude of the metric. For example, the bootstrap’s bias is probably different for models with 60% and 95% accuracy. If we think our models will have about the same performance, the bootstrap (with a bias correction) may be a good choice. Note that @Molinaro2005p47 found that the 632+ estimator may not perform well when the training set is small (and especially of the number of predictors is large).\n\nLet's take a look at a few specialized resampling methods. \n\n## Time Series Data {#sec-time-series-resampling}\n\nTime series data [@Hyndmanforecast] are sequential observations ordered over time. The most common example is daily stock prices. These data are a special case due to _autocorrelation_: rows of the data set are not independent. This can occur for many different reasons (e.g. underlying seasonal trends, etc.), but it complicates the resampling process in different ways: \n\n - We want to avoid analysis and assessment partitions where older data is in the assessment set (to avoid predicting past data with future data). \n - Random sampling might destroy the underlying data structures that can be used to measure specific trends (such as seasonality). \n\n_Rolling forecasting origin_ splitting [@tashman2000out] is a resampling scheme that mimics the train/test splitting pattern from @sec-basic-splitting where the most recent data are used in the assessment set. We would choose how much data (or what range of time) to use for the analysis and assessment sets, then slides this pattern over the whole data set. @fig-rolling-scheme illustrates this process where each block could represent some unit of time. For example, we might build the model on six months of data and then predict with one month. The next resample iteration could bump that forward by a month or another period (so that the assessment sets can be distinct or overlapping).\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![A schematic of rolling origin resampling for time series data. Each box corresponds to a unit of time (e.g., day, month, year, etc.).](../premade/rolling.svg){#fig-rolling-scheme fig-align='center' width=55%}\n:::\n:::\n\n\n\n\nWe also have the choice to keep the assessment set a set period or to cumulatively build it up from the start of the training set or move a window of a fixed size.\n\nWe'll use rolling forecasting origin resampling in one of the upcoming case studies using the hotel rate data previously discussed in @sec-hotel-rates.\n\n## Spatial Data {#sec-spatial-resampling}\n\nLike time series data, spatial data can have autocorrelation, with objects being more similar to closer objects than to objects further away. Tobler's First Law of Geography [@bjorholm2008extent] is: \n\n> \"Everything is related to everything else, but near things are more related than distant things.\"\n\nThink of an overhead color satellite image of a forest. Different types of trees have different foliage colors. If we focus on the color green, the distribution of \"greeness\" is not a random pattern of the x/y axes (random distribution would resemble resembling static). In other words, pixels cannot be assumed to be independent of one another. \n\nSpatial autocorrelation will generally affect how we partition the data; we want to avoid having very similar training set points in both the analysis and assessment sets. There are a few ways to compensate for this issue: \n\n - Group the data into local areas and iterate by removing one group at a time. If there is no rational, objective process for creating groups, use clustering methods or create a regular grid across the data range. \n - Buffering is a method that excludes data around a specific data point or group. For example, if leave-one-out cross-validation were used, it would be a good idea to filter the analysis set so that the other data are not within some pre-defined radius of the held-out sample. \n\n@Roberts2017, @Pohjankukka2017, @karasiak2022spatial, and @mahoney2023assessing have good overviews of these techniques.\n\n@fig-sole-eggs shows an example from @horwood1993bristol, where sole fish were sampled across locations west of England at specific times. The sampling plan appears to include a buffer. We could use an algorithm to estimate groups as blocks, or perhaps a context-specific rule exists. For example, rational subgroups may focus on distance from the coastline.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {#fig-sole-eggs .cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-cd34ace338bec7c59f7d\" style=\"width:100%;height:336px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cd34ace338bec7c59f7d\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatterNoLabels\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addCircles\",\"args\":[[50.052,50.07,50.122,50.188,50.186,50.184,50.235,50.314,50.354,50.449,50.564,50.619,50.685,50.715,50.818,50.925,51.125,51.121,51.224,51.247,51.366,51.53,51.375,51.375,51.596,51.631,51.583,51.605,51.625,51.625,51.625,51.626,51.636,51.377,51.376,51.375,51.374,51.376,51.376,51.376,51.376,51.382,51.2,51.066,51.067,51.188,51.125,51.124,51.126,51.125,51.125,51.134,50.876,50.874,50.874,50.876,50.794,50.936,50.942,50.812,50.808,50.935,50.946,50.824,50.681,50.691,50.567,50.557,50.688,50.691,50.555,50.627,50.627,50.636,50.437,50.432,50.434,50.432,50.435,50.32,50.323,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.235,50.314,50.354,50.449,50.564,50.619,50.685,50.715,50.818,50.925,51.125,51.121,51.224,51.247,51.366,51.53,51.375,51.375,51.596,51.631,51.583,51.605,51.625,51.625,51.625,51.626,51.636,51.377,51.376,51.375,51.374,51.376,51.376,51.376,51.376,51.382,51.2,51.066,51.067,51.188,51.125,51.124,51.126,51.125,51.125,51.134,50.876,50.874,50.874,50.876,50.794,50.936,50.942,50.812,50.808,50.935,50.946,50.824,50.681,50.691,50.567,50.557,50.688,50.691,50.555,50.627,50.627,50.636,50.437,50.432,50.434,50.432,50.435,50.32,50.323,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.235,50.314,50.354,50.449,50.564,50.619,50.685,50.715,50.818,50.925,51.125,51.121,51.224,51.247,51.366,51.53,51.375,51.375,51.596,51.631,51.583,51.605,51.625,51.625,51.625,51.626,51.636,51.377,51.376,51.375,51.374,51.376,51.376,51.376,51.376,51.382,51.2,51.066,51.067,51.188,51.125,51.124,51.126,51.125,51.125,51.134,50.876,50.874,50.874,50.876,50.794,50.936,50.942,50.812,50.808,50.935,50.946,50.824,50.681,50.691,50.567,50.557,50.688,50.691,50.555,50.627,50.627,50.636,50.437,50.432,50.434,50.432,50.435,50.32,50.323,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.235,50.314,50.354,50.449,50.564,50.619,50.685,50.715,50.818,50.925,51.125,51.121,51.224,51.247,51.366,51.53,51.375,51.375,51.596,51.631,51.583,51.605,51.625,51.625,51.625,51.626,51.636,51.377,51.376,51.375,51.374,51.376,51.376,51.376,51.376,51.382,51.2,51.066,51.067,51.188,51.125,51.124,51.126,51.125,51.125,51.134,50.876,50.874,50.874,50.876,50.794,50.936,50.942,50.812,50.808,50.935,50.946,50.824,50.681,50.691,50.567,50.557,50.688,50.691,50.555,50.627,50.627,50.636,50.437,50.432,50.434,50.432,50.435,50.32,50.323,50.317,50.313,50.386],[-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-5.475,-5.38,-5.241,-5.16,-5.127,-4.871,-4.883,-4.702,-4.626,-4.626,-4.647,-4.379,-4.132,-3.891,-3.877,-3.87,-4.117,-4.354,-4.407,-4.624,-4.833,-5.142,-5.356,-5.614,-5.861,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-5.644,-5.396,-5.145,-4.891,-4.618,-4.875,-4.869,-5.113,-5.114,-5.363,-5.604,-5.849,-6.12,-6.357,-6.625,-6.648,-6.399,-6.153,-5.908,-5.623,-5.653,-5.371,-5.39,-5.125,-5.14,-4.875,-4.865,-5.105,-5.374,-5.362,-5.632,-5.604,-5.88,-5.861,-6.107,-6.357,-6.636,-6.398,-6.154,-5.902,-5.651,-5.363,-5.609,-5.854,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-5.475,-5.38,-5.241,-5.16,-5.127,-4.871,-4.883,-4.702,-4.626,-4.626,-4.647,-4.379,-4.132,-3.891,-3.877,-3.87,-4.117,-4.354,-4.407,-4.624,-4.833,-5.142,-5.356,-5.614,-5.861,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-5.644,-5.396,-5.145,-4.891,-4.618,-4.875,-4.869,-5.113,-5.114,-5.363,-5.604,-5.849,-6.12,-6.357,-6.625,-6.648,-6.399,-6.153,-5.908,-5.623,-5.653,-5.371,-5.39,-5.125,-5.14,-4.875,-4.865,-5.105,-5.374,-5.362,-5.632,-5.604,-5.88,-5.861,-6.107,-6.357,-6.636,-6.398,-6.154,-5.902,-5.651,-5.363,-5.609,-5.854,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-5.475,-5.38,-5.241,-5.16,-5.127,-4.871,-4.883,-4.702,-4.626,-4.626,-4.647,-4.379,-4.132,-3.891,-3.877,-3.87,-4.117,-4.354,-4.407,-4.624,-4.833,-5.142,-5.356,-5.614,-5.861,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-5.644,-5.396,-5.145,-4.891,-4.618,-4.875,-4.869,-5.113,-5.114,-5.363,-5.604,-5.849,-6.12,-6.357,-6.625,-6.648,-6.399,-6.153,-5.908,-5.623,-5.653,-5.371,-5.39,-5.125,-5.14,-4.875,-4.865,-5.105,-5.374,-5.362,-5.632,-5.604,-5.88,-5.861,-6.107,-6.357,-6.636,-6.398,-6.154,-5.902,-5.651,-5.363,-5.609,-5.854,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-5.475,-5.38,-5.241,-5.16,-5.127,-4.871,-4.883,-4.702,-4.626,-4.626,-4.647,-4.379,-4.132,-3.891,-3.877,-3.87,-4.117,-4.354,-4.407,-4.624,-4.833,-5.142,-5.356,-5.614,-5.861,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-5.644,-5.396,-5.145,-4.891,-4.618,-4.875,-4.869,-5.113,-5.114,-5.363,-5.604,-5.849,-6.12,-6.357,-6.625,-6.648,-6.399,-6.153,-5.908,-5.623,-5.653,-5.371,-5.39,-5.125,-5.14,-4.875,-4.865,-5.105,-5.374,-5.362,-5.632,-5.604,-5.88,-5.861,-6.107,-6.357,-6.636,-6.398,-6.154,-5.902,-5.651,-5.363,-5.609,-5.854,-6.107,-6.358,-6.62],3000,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"white\",\"weight\":5,\"opacity\":0.01,\"fill\":true,\"fillColor\":\"white\",\"fillOpacity\":1},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null,null]}],\"limits\":{\"lat\":[50.052,51.636],\"lng\":[-6.648,-3.87]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nSpatial distirbution of sole eggs in the Bristol channel.\n:::\n:::\n\n\n\n\nAs an example, @fig-sole-eggs-cv shows the results when 10 clusters are estimated from the data to use as folds. K-means clustering was used to determine the ten clusters. \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {#fig-sole-eggs-cv .cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-ac76ae0f129de354e23e\" style=\"width:100%;height:336px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ac76ae0f129de354e23e\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatterNoLabels\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addCircles\",\"args\":[[50.818,50.925,51.125,51.121,51.376,51.2,51.066,50.946,50.818,50.925,51.125,51.121,51.376,51.2,51.066,50.946,50.818,50.925,51.125,51.121,51.376,51.2,51.066,50.946,50.818,50.925,51.125,51.121,51.376,51.2,51.066,50.946,50.564,50.619,50.685,50.715,50.812,50.808,50.935,50.824,50.681,50.691,50.564,50.619,50.685,50.715,50.812,50.808,50.935,50.824,50.681,50.691,50.564,50.619,50.685,50.715,50.812,50.808,50.935,50.824,50.681,50.691,50.564,50.619,50.685,50.715,50.812,50.808,50.935,50.824,50.681,50.691,50.235,50.314,50.354,50.449,50.567,50.557,50.555,50.434,50.432,50.435,50.32,50.323,50.235,50.314,50.354,50.449,50.567,50.557,50.555,50.434,50.432,50.435,50.32,50.323,50.235,50.314,50.354,50.449,50.567,50.557,50.555,50.434,50.432,50.435,50.32,50.323,50.235,50.314,50.354,50.449,50.567,50.557,50.555,50.434,50.432,50.435,50.32,50.323,51.626,51.636,51.377,51.376,51.375,51.374,51.125,51.125,51.134,50.876,51.626,51.636,51.377,51.376,51.375,51.374,51.125,51.125,51.134,50.876,51.626,51.636,51.377,51.376,51.375,51.374,51.125,51.125,51.134,50.876,51.626,51.636,51.377,51.376,51.375,51.374,51.125,51.125,51.134,50.876,50.052,50.07,50.122,50.188,50.186,50.184,50.627,50.636,50.437,50.432,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.627,50.636,50.437,50.432,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.627,50.636,50.437,50.432,50.317,50.313,50.386,50.052,50.07,50.122,50.188,50.186,50.184,50.627,50.636,50.437,50.432,50.317,50.313,50.386,51.247,51.366,51.53,51.375,51.247,51.366,51.53,51.375,51.247,51.366,51.53,51.375,51.247,51.366,51.53,51.375,51.605,51.625,51.625,51.625,51.376,51.376,51.376,51.605,51.625,51.625,51.625,51.376,51.376,51.376,51.605,51.625,51.625,51.625,51.376,51.376,51.376,51.605,51.625,51.625,51.625,51.376,51.376,51.376,51.224,51.375,51.596,51.631,51.583,51.382,51.224,51.375,51.596,51.631,51.583,51.382,51.224,51.375,51.596,51.631,51.583,51.382,51.224,51.375,51.596,51.631,51.583,51.382,50.874,50.874,50.876,50.794,50.936,50.688,50.691,50.627,50.874,50.874,50.876,50.794,50.936,50.688,50.691,50.627,50.874,50.874,50.876,50.794,50.936,50.688,50.691,50.627,50.874,50.874,50.876,50.794,50.936,50.688,50.691,50.627,51.067,51.188,51.125,51.124,51.126,50.942,51.067,51.188,51.125,51.124,51.126,50.942,51.067,51.188,51.125,51.124,51.126,50.942,51.067,51.188,51.125,51.124,51.126,50.942],[-4.626,-4.626,-4.647,-4.379,-4.891,-4.875,-4.869,-4.875,-4.626,-4.626,-4.647,-4.379,-4.891,-4.875,-4.869,-4.875,-4.626,-4.626,-4.647,-4.379,-4.891,-4.875,-4.869,-4.875,-4.626,-4.626,-4.647,-4.379,-4.891,-4.875,-4.869,-4.875,-5.127,-4.871,-4.883,-4.702,-5.39,-5.125,-5.14,-4.865,-5.105,-5.374,-5.127,-4.871,-4.883,-4.702,-5.39,-5.125,-5.14,-4.865,-5.105,-5.374,-5.127,-4.871,-4.883,-4.702,-5.39,-5.125,-5.14,-4.865,-5.105,-5.374,-5.127,-4.871,-4.883,-4.702,-5.39,-5.125,-5.14,-4.865,-5.105,-5.374,-5.475,-5.38,-5.241,-5.16,-5.362,-5.632,-5.861,-5.902,-5.651,-5.363,-5.609,-5.854,-5.475,-5.38,-5.241,-5.16,-5.362,-5.632,-5.861,-5.902,-5.651,-5.363,-5.609,-5.854,-5.475,-5.38,-5.241,-5.16,-5.362,-5.632,-5.861,-5.902,-5.651,-5.363,-5.609,-5.854,-5.475,-5.38,-5.241,-5.16,-5.362,-5.632,-5.861,-5.902,-5.651,-5.363,-5.609,-5.854,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-6.12,-6.357,-6.625,-6.648,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-6.12,-6.357,-6.625,-6.648,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-6.12,-6.357,-6.625,-6.648,-6.107,-6.365,-6.648,-6.4,-6.144,-5.905,-6.12,-6.357,-6.625,-6.648,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-6.357,-6.636,-6.398,-6.154,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-6.357,-6.636,-6.398,-6.154,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-6.357,-6.636,-6.398,-6.154,-6.107,-6.358,-6.62,-5.875,-6.108,-6.363,-6.146,-5.89,-5.693,-6.357,-6.636,-6.398,-6.154,-6.107,-6.358,-6.62,-3.891,-3.877,-3.87,-4.117,-3.891,-3.877,-3.87,-4.117,-3.891,-3.877,-3.87,-4.117,-3.891,-3.877,-3.87,-4.117,-5.142,-5.356,-5.614,-5.861,-5.644,-5.396,-5.145,-5.142,-5.356,-5.614,-5.861,-5.644,-5.396,-5.145,-5.142,-5.356,-5.614,-5.861,-5.644,-5.396,-5.145,-5.142,-5.356,-5.614,-5.861,-5.644,-5.396,-5.145,-4.132,-4.354,-4.407,-4.624,-4.833,-4.618,-4.132,-4.354,-4.407,-4.624,-4.833,-4.618,-4.132,-4.354,-4.407,-4.624,-4.833,-4.618,-4.132,-4.354,-4.407,-4.624,-4.833,-4.618,-6.399,-6.153,-5.908,-5.623,-5.653,-5.604,-5.88,-6.107,-6.399,-6.153,-5.908,-5.623,-5.653,-5.604,-5.88,-6.107,-6.399,-6.153,-5.908,-5.623,-5.653,-5.604,-5.88,-6.107,-6.399,-6.153,-5.908,-5.623,-5.653,-5.604,-5.88,-6.107,-5.113,-5.114,-5.363,-5.604,-5.849,-5.371,-5.113,-5.114,-5.363,-5.604,-5.849,-5.371,-5.113,-5.114,-5.363,-5.604,-5.849,-5.371,-5.113,-5.114,-5.363,-5.604,-5.849,-5.371],3000,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"colorwhite\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"whiteweight\":5,\"opacity\":0.01,\"fill\":true,\"fillColor\":[\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4147ADFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#4777EFFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#A2FC3CFF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#1BD0D5FF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"#39A4FBFF\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"whitefillOpacity\":1},[\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold01\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold02\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold03\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold04\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold05\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold06\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold07\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold08\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold09\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\",\"Fold10\"],null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null,null]}],\"limits\":{\"lat\":[50.052,51.636],\"lng\":[-6.648,-3.87]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n10-fold cross-validation assignments using spatial clustering. The points are clickable.\n:::\n:::\n\n\n\n\nThe number of locations per fold ranged from 16 to  52 with a median of 32 locations. \n\n## Grouped or Multi-Level Data {#sec-multilevel-resampling}\n\nWhen rows of data are correlated for other reasons, such as those discussed in @sec-multilevel-splitting, we can extend the techniques described above. Consider the previously mentioned example of having the purchase histories of many users from a retail database. If we had a training set of 10,000 instances that included 100 customers, we could conduct _V_-fold cross-validation to determine which _customers_ would go into the analysis and assessment sets. As with the initial split, any rows associated with specific customers would be placed into the same partition (i.e., analysis or assessment). \n\n## Frequently Asked Questions {#sec-resampling-faq}\n\nThese questions represent areas of confusion regarding resampling. \n\n#### Is it bad to get different results within each resample?   {#sec-resampling-Q01 .unnumbered}\n\nThe point of resampling is to see how the model pipeline changes when the data changes. There is a good chance that some important estimates differ from resample to resample. For example, when algorithmically filtering predictors, you might get _B_ different predictor lists, and that’s okay. It does give you a sense of how much noise is in the part of your model pipeline.\n\n#### Can/should I use the individual resampling results to change the model pipeline?   {#sec-resampling-Q02 .unnumbered}\n\nWe often hear questions about how to use the cross-validated results to define the model. For example, using the top _X_% of predictors selected during resampling as the final predictor set in a new model pipeline seems intuitive. \n\nOne important thing to consider is that _you now have a different model pipeline than what was just resampled_. To understand the performance of your newly informed model, you need to resample a model pipeline that _algorithmically_ selects the _X_% of predictors and resample it.\n\nNote that resampling the specific set of top predictors is not appropriate. The rule to determine the top set should be resampled, not the specific output of that rule.\n\nFor the original pipeline with the filter to keep the top predictors, the final predictor set is determined when you fit that pipeline on the training set. The resampling results tell you about what _could_ have happened.\n\n#### What happens to the _B_ models? Which one should I keep? {#sec-resampling-Q03 .unnumbered}\n\nThe _B_ models fit within resampling are _only used_ to estimate how well the model fits the data. You don’t need them after that. You can retain them for diagnostic purposes though. As mentioned above, using the replicate models to look into how parts of the model change can be helpful. \n\nAlso, if you are not using a single validation set, recall that none of these models are trained with the unaltered training set, so none would be the final model.  \n\n#### Is this some sort of ensemble?  {#sec-resampling-Q04 .unnumbered}\n\nNo. However, if you do end up using a stacking ensemble (@sec-ensembles), you could use the out-of-sample predictions to train that type of ensemble. \n\n#### Can I accidentally do resampling wrong?  {#sec-resampling-Q05 .unnumbered}\n\nUnfortunately yes. As previously mentioned, improper data usage is one of the most frequent ways that machine learning models silently fail; that is, you won’t know that there is a problem until the next set of labeled data. A good example discussed in @sec-removing-predictors is @Ambroise2002p1493. \n\nIf you are \n\n - training _every_ part of your model pipeline after the initial data split and using _only_ the training set and, \n\n- evaluating performance with external data\n\nthe risk of error is low.\n\n#### What is nested resampling? {#sec-resampling-Q06 .unnumbered}\n\nThis is a version of where an additional layer of resampling occurs. For example, suppose you are using 10-fold cross-validation. Within each of the 10 iterations, you might add 20 bootstrapping iterations (that resamples the analysis set). That ends up training 200 distinct models^[We will refer to the first resample (10-fold CV) as the _outer_ resample and the boostrap as the _inner_ resample.]. \n\nFor a single model, that’s not very useful. However, as discussed in @sec-nested-resampling, there are situations where the analysis set is being used for too many purposes. For example, during model tuning, you might use resampling to find the best model _and_ measure its performance. In certain cases, that can lead to bad results for the latter task.  \n\nAnother example is recursive feature selection, where we are trying to rank predictors, sequentially remove them, and determine how many to remove. In this case, it's a good idea to use an outer resampling loop to determine where to stop and an inner loop for the other tasks.\n\nWe will see nested resampling in later chapters. \n\n#### Are these methods related to permutation tests? {#sec-resampling-Q09 .unnumbered}\n\nNot really. Permutation methods are similar to resampling only in that they perform multiple calculations on different versions of the training set. \n\nWe used permutation methods in the bootstrapping section to estimate the no-information rate. Otherwise, they won’t be used to evaluate model performance. \n\n#### Are sub-sampling or down-sampling the same as resampling?  {#sec-resampling-Q08 .unnumbered}\n \nNo. These are techniques to modify your training set (or analysis set) to rebalance the data when a classification problem has rare events. They’ll be discussed in @sec-imbalance-sampling.\n \n#### Why do I mostly hear about validation sets?  {#sec-resampling-Q09 .unnumbered}\n\nAs discussed in the introduction chapter, stereotypical deep learning models are trained on _very_ large sets of data. There is very little reason to use multiple resamples in these instances, and deep learning takes up a lot of space in the media and social media. \n\nGenerally, every data set that is not massive could benefit from multiple resamples. \n\n\n\n\n\n\n\n\n\n\n## Chapter References {.unnumbered}\n",
    "supporting": [
      "resampling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"../site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"../site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}