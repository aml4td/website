{
  "hash": "7c8b226338c6cb875e32c4a7160e0c60",
  "result": {
    "engine": "knitr",
    "markdown": "---\nknitr:\n  opts_chunk:\n    cache.path: \"../_cache/feature-selection/\"\n---\n\n# Feature Selection {#sec-feature-selection}\n\n\n\nIn Chapters [-@sec-numeric-predictors] through [-@sec-interactions-nonlinear], we described different methods for adding new predictors to the model (e.g., interactions, spline columns, etc.). We can add any predictors (or functions of predictors) based on first principles or our intuition or contextual knowledge. \n\nWe are also motivated to remove unwanted or irrelevant predictors. This can decrease model complexity, training time, computer memory, the cost of acquiring unimportant predictors, and so on. For some models, the presence of non-informative predictors can _decrease_ performance (as we'll see in @fig-irrelevant-predictors). \n\nWe may want to remove predictors solely based on their distributions; _unsupervised_ feature selection focuses on just the predictor data.\n\nMore often, though, we are interested in supervised feature selection^[Recall that we use the terms \"predictors\" and \"features\" interchangeably. We favor the former term, but \"features\" is more commonly used when discussing the filtering of columns.]: the removal of predictors that do not appear to have a relationship to the outcome. This implies that we have a statistic that can compute some measure of each predictor’s utility for predicting the outcome. \n\nWhile it is easy to add predictors to a model, it can be very difficult (and computationally expensive) to properly determine which predictors to remove. The reason comes back to the misuse (or over-use) of data. We’ve described the problem of using the same data to fit and evaluate a model. By naively re-predicting the training set, we can accidentally get overly optimistic performance statistics. To compensate for this, resampling repeatedly allocates some data for model fitting and other data for model evaluation. \n\nFor feature selection, we have the same problem when the same data are used to measure importance, filter the predictors, and then train the model on the smaller feature set. It is similar to repeatedly taking the same test and then measuring our knowledge using the grade for the last test repetition. It doesn’t accurately measure the quantity that is important to us. This is the reason that this chapter is situated here instead of in Part 2; understanding overfitting is crucial to effectively remove predictors. \n\nThis chapter will summarize the most important aspects of feature selection. This is a broad topic and a more extensive discussion can be found in @fes. First, we’ll use an example to quantify the effect of irrelevant predictors on different models. Next, the four main approaches for feature selection are described and illustrated. \n\n## The Cost of Irrelevant Predictors  {#sec-irrelevant-predictors}\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nDoes it matter if the model is given extra predictors that are unrelated to the outcome? It depends on the model. To quantify this, data were simulated using the equation described in @hooker2004discovering and used in @sorokina2008detecting: \n\n$$\ny_i = \\pi^{x_{i1} x_{i2}}  \\sqrt{ 2 x_{i3} } - asin(x_{i4}) + \\log(x_{i3}  + x_{i5}) - (x_{i9} / x_{i10}) \\sqrt{x_{i7} / x_{i8}} - x_{i2} x_{i7} + \\epsilon_i\n$$ {#eq-hooker}\n\nwhere predictors 1, 2, 3, 6, 7, and 9 are standard uniform while the others are uniform on [0.6, 1.0]. Note that $x_6$ is not used in the equation. The errors $\\epsilon_i$ are Gaussian with mean zero and a standard deviation^[For this value of the simulated standard deviation, the best possible RMSE value is also 0.25.] of 0.25. Training and testing data sizes where simulated to be 1,000 and 100,000, respectively. \n\nTo assess the effect of useless predictors, between 10 and 100 extra columns of standard normal data were generated (unrelated to the outcome). Models were fit, tuned, and the RMSE of the test set was computed for each model. Twenty simulations were run for each combination of models and extra features^[Details and code can be found at [`https://github.com/topepo/noise_features_sim `](https://github.com/topepo/noise_features_sim).]. \n\nThe percent difference from baseline RMSE was computed (baseline being the model with no extra columns). @fig-irrelevant-predictors shows the results for the following models: \n\n- Bagged regression trees \n- Bayesian additive regression trees (BART)\n- Boosted trees (via lightGBM)\n- Cubist\n- Generalized additive models (GAMs)\n- K-nearest neighbors (KNN)\n- Multivariate adaptive regression splines (MARS)\n- Penalized linear regression\n- Random forest\n- RuleFit\n- Single-layer neural networks\n- Support vector machines (radial basis function kernel)\n\nThese models are described in detail in subsequent chapters. The colors of the points/lines signifies whether the model automatically removes unused predictors from the model equation (see @sec-automatic-selection below). \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![For different regression models, the percent increase in RMSE is shown as a function of the number of additional non-informative predictors.](feature-selection_files/figure-html/fig-irrelevant-predictors-1.svg){#fig-irrelevant-predictors fig-align='center' width=70%}\n:::\n:::\n\n\nThe results show that a few models, K-nearest neighbors, neural networks, and support vector machines, have severely degraded performance as the number of predictors increases. This is most likely due to the use of cross- and/or dot-products of the predictor columns in their calculations. The extra predictors add significant noise to these calculations, and that noise propagates in a way that inhibits the models from accurately determining the underlying relationship with the outcome. \n\nHowever, several other models use these same calculations without being drastically affected. This is due to the models **automatically performing feature selection** during model training. Let’s briefly describe two sets of models that were largely unaffected by the extra columns. \n\n 1. The first set includes penalized linear regression, generalized additive models, and RuleFit. These add a penalty to their calculations, restricting the model parameters from becoming abnormally large unless the underlying data warrant a large coefficient. This effectively reduces the impact of extra predictors by keeping their corresponding model coefficient at or near zero. \n\n 2. The other set o model models include MARS and Cubist. They selectively include predictors in their regression equations, only including those specifically selected as having value. \n\nThe other unaffected models are tree-based. As seen in @fig-reg-tree, these types of models make different rules by selecting predictors to _split_ the data. If a predictor was not used in any split, it is functionally independent of the outcome in the prediction equation. This provides some insensitivity to the presence of non-informative predictors, although there is slight degradation in RMSE as the number of columns increases. \n\nIn summary, irrelevant columns minimally affect ML models that automatically select features. Models that do not have this attribute can be crippled under the same circumstances. \n\n## Different Levels of Features {#sec-feature-levels}\n\nWhen we talk about selecting features, we should be clear about what level of computation we mean. There are often two levels: \n\n- **Original predictors** are the unmodified version of the data. \n- **Derived predictors** refer to the set of columns that are present after feature engineering. \n\nFor example, if our model requires all numeric inputs, a categorical predictor is often converted to binary indicators. A date-time column is the original predictor, while the binary indicators for individual days of the week are the derived predictor. Similarly, the 550 measurement predictors in the barley data are the original predictors, and embedded values, such as the PCA components, are the derived predictors. \n\nDepending on the context, our interest in feature selection could be at either level. If the original predictors are expensive to estimate, we would be more interested in removing them at the original level; if _any_ of their derived predictors are important, we need the original. \n\nThis idea will arise again in @sec-importance when we discuss _variable importance scores_ for explaining models. \n\n## Overfitting the Feature Set {#sec-selection-overfitting}\n\nWe’ve previously discussed overfitting, where a model finds patterns in the training data that are not reproducible. It is also possible to _overfit the predictor set_ by finding the training set predictors that appear to be connected to the outcome but do not show the same relationship in other data. \n\nThis is most likely to occur when the number of predictors ($p$) is much larger than the training set size ($n_{tr}$) or when no external validation is used to verify performance. @Ambroise2002p1493 shows reanalyses of high-dimensional biology experiments using a backward selection algorithm for removing predictors. In some cases, they could find a model and predictor subset with perfect accuracy even when the training set outcome data were randomly shuffled. \n\nRecall back in @sec-model-pipeline an argument was made that preprocessing methods _and_ the supervised model encompassed the entire model pipeline. Technically, feature selection (supervised or unsupervised) falls into the definition of preprocessing. It is important to use data that is different from the data used to train the pipeline (i.e., select the predictors) is different from the data used to evaluate how well it worked.  \n\nFor example, if we use a resampling scheme, we have to repeat the feature selection process within each resample. If we used 10-fold cross-validation, each of the 10 analysis sets (90% of the training set) would have its own set of selected predictors. \n\n@Ambroise2002p1493 demonstrated that when feature selection was enacted once, and then the model with this subset was resampled, they could produce models with excessively optimistic performance metrics. However, when the performance statistics were computed with multiple realizations of feature selection, there was very little false optimism. \n\nAnother improper example of data usage that can be found in the literature, as well as in real-life analyses, occurs when the entire data set is used to select predictors _then_ the initial split is used to create the training and test sets. This \"bakes in\" the false optimism from the start, the epitome of information leakage^[Recall out mantra that \"Always have a separate piece of data that can **contradict what you believe**.\"]. \n\nHowever, performing feature selection in each resample can multiplicatively increase the computational cost, especially if the model has many tuning parameters. For this reason, we tend to focus on methods that _automatically select features_ during the normal process of training the model (as discussed below). \n\nOne scheme to understand if we are overfitting to the predictors is to create one or more artificial \"sentinel predictors\" that are random noise. Once the analysis that ranks/selects predictors is finished, we can see how high the algorithm ranks these deliberately irrelevant predictors. It is also possible to create a rule where predictors that rank higher than the sentinels are selected to be included in the model. \n\n## Unsupervised Selection {#sec-unsupervised-selection}\n\nThere are occasions where the values of the predictors are unfavorable or possibly detrimental to the model. The simplest example is a zero-variance column, where all of the values of a predictor in the training set have the same value. There is no information in these predictors and, although the model might be able to tolerate such a predictor, taking the time to identify and remove such columns is advisable. \n\nBut what about situations where only one or two rows have non-zero values? It is difficult to filter on variance values since the predictors could have different units or ranges. The underlying problem occurs when very few unique values exist (i.e., \"coarse data\"), and one or two predictor values capture most of the rows. Perhaps we can identify this situation. \n\nConsider a hypothetical training set of 500 data points with a count-based predictor that has mostly zero counts. However, there are three data points with a count of 1 and one instance with a count of 2. The variance of these data is low, but it would be difficult to determine a cutpoint for removal. @kuhn2008building developed an algorithm to find **near-zero variance predictors**, as defined by two criteria:\n\n- The _freqeuncy ratio_ is the frequency of the most prevalent value over the second most frequent value. For our example, the ratio was 496/3 = 165.3.\n- The _proportion of unique values_, which is 3 / 500 = 0.006. \n\nWe can determine thresholds for both of these criteria to remove the predictor. The default behavior is to remove the column of the frequency ratio is greater than 19 **and** the proportion of unique values is less than 0.1. For the example, the predictor would be eliminated. \n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nAnother example of an unsupervised filter reduces between-predictor correlations. A high degree of correlation can reduce the effectiveness of some models. We can filter out predictors by choosing a threshold for the (absolute) pairwise correlations and finding the smallest subset of predictors to meet this criterion. \n\nA good example is @fig-corr-plot, which visualizes the correlation matrix for the fifteen predictors in the forestry data set (from @sec-spatial-splitting). Predictors for the January minimum temperature and the annual mean temperature are highly correlated (corr = 0.93), and only one might be sufficient to produce a better model. Similar issues occur with other predictor pairs. If we apply a threshold of 0.50, then six predictors (dew temperature, annual precipitation, annual maximum temperature, annual mean temperature, annual minimum temperature, and maximum vapor) would be removed before model training. \n\n\n::: {.cell layout-align=\"center\"}\n::: {#fig-corr-plot .cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-8526e0ff42d760823207\" style=\"width:90%;height:576px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8526e0ff42d760823207\">{\"x\":{\"data\":[{\"x\":[9.453125,6.28125,null,6.28125,6.28125,null,6.28125,3.3125,null,3.3125,3.3125,null,3.3125,1.75,null,1.75,1.75,null,1.75,1,null,1,1,null,1.75,2.5,null,2.5,2.5,null,2.5,2,null,2,2,null,2.5,3,null,3,3,null,3.3125,4.875,null,4.875,4.875,null,4.875,4,null,4,4,null,4.875,5.75,null,5.75,5.75,null,5.75,5,null,5,5,null,5.75,6.5,null,6.5,6.5,null,6.5,6,null,6,6,null,6.5,7,null,7,7,null,6.28125,9.25,null,9.25,9.25,null,9.25,8.5,null,8.5,8.5,null,8.5,8,null,8,8,null,8.5,9,null,9,9,null,9.25,10,null,10,10,null,9.453125,12.625,null,12.625,12.625,null,12.625,11.5,null,11.5,11.5,null,11.5,11,null,11,11,null,11.5,12,null,12,12,null,12.625,13.75,null,13.75,13.75,null,13.75,13,null,13,13,null,13.75,14.5,null,14.5,14.5,null,14.5,14,null,14,14,null,14.5,15,null,15,15],\"y\":[4.6539480487493945,4.6539480487493945,null,4.6539480487493945,3.6432727838804477,null,3.6432727838804477,3.6432727838804477,null,3.6432727838804477,2.8412876818251118,null,2.8412876818251118,2.8412876818251118,null,2.8412876818251118,1.5690898172853271,null,1.5690898172853271,1.5690898172853271,null,1.5690898172853271,0,null,1.5690898172853271,1.5690898172853271,null,1.5690898172853271,1.296894045873985,null,1.296894045873985,1.296894045873985,null,1.296894045873985,0,null,1.296894045873985,1.296894045873985,null,1.296894045873985,0,null,2.8412876818251118,2.8412876818251118,null,2.8412876818251118,2.1184883527549161,null,2.1184883527549161,2.1184883527549161,null,2.1184883527549161,0,null,2.1184883527549161,2.1184883527549161,null,2.1184883527549161,1.4468096220230999,null,1.4468096220230999,1.4468096220230999,null,1.4468096220230999,0,null,1.4468096220230999,1.4468096220230999,null,1.4468096220230999,1.4183664376021465,null,1.4183664376021465,1.4183664376021465,null,1.4183664376021465,0,null,1.4183664376021465,1.4183664376021465,null,1.4183664376021465,0,null,3.6432727838804477,3.6432727838804477,null,3.6432727838804477,1.5317404976901809,null,1.5317404976901809,1.5317404976901809,null,1.5317404976901809,0.68995191958430879,null,0.68995191958430879,0.68995191958430879,null,0.68995191958430879,0,null,0.68995191958430879,0.68995191958430879,null,0.68995191958430879,0,null,1.5317404976901809,1.5317404976901809,null,1.5317404976901809,0,null,4.6539480487493945,4.6539480487493945,null,4.6539480487493945,1.9227569644534859,null,1.9227569644534859,1.9227569644534859,null,1.9227569644534859,0.51036796017875319,null,0.51036796017875319,0.51036796017875319,null,0.51036796017875319,0,null,0.51036796017875319,0.51036796017875319,null,0.51036796017875319,0,null,1.9227569644534859,1.9227569644534859,null,1.9227569644534859,0.91461325281991224,null,0.91461325281991224,0.91461325281991224,null,0.91461325281991224,0,null,0.91461325281991224,0.91461325281991224,null,0.91461325281991224,0.38508187790149317,null,0.38508187790149317,0.38508187790149317,null,0.38508187790149317,0,null,0.38508187790149317,0.38508187790149317,null,0.38508187790149317,0],\"text\":[\"y: 4.6539\",\"y: 4.6539\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[9.453125,6.28125,3.3125,1.75,1,2.5,2,3,4.875,4,5.75,5,6.5,6,7,9.25,8.5,8,9,10,12.625,11.5,11,12,13.75,13,14.5,14,15],\"y\":[4.6539480487493945,3.6432727838804477,2.8412876818251118,1.5690898172853271,0,1.296894045873985,0,0,2.1184883527549161,0,1.4468096220230999,0,1.4183664376021465,0,0,1.5317404976901809,0.68995191958430879,0,0,0,1.9227569644534859,0.51036796017875319,0,0,0.91461325281991224,0,0.38508187790149317,0,0],\"text\":[\"y: 4.6539\",\"y: 3.6433\",\"y: 2.8413\",\"y: 1.5691\",\"y: 0.0000\",\"y: 1.2969\",\"y: 0.0000\",\"y: 0.0000\",\"y: 2.1185\",\"y: 0.0000\",\"y: 1.4468\",\"y: 0.0000\",\"y: 1.4184\",\"y: 0.0000\",\"y: 0.0000\",\"y: 1.5317\",\"y: 0.6900\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.0000\",\"y: 1.9228\",\"y: 0.5104\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.9146\",\"y: 0.0000\",\"y: 0.3851\",\"y: 0.0000\",\"y: 0.0000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x2\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"y\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"z\":[[0.1029652801137145,0.30127425138113828,0.39583706636226279,0.71466256731157829,0.50931166859354493,0.48427726767654888,0.47917941088600424,0.13448402286301922,0.21168139651146825,0.35177568756702138,0.72712060687930868,0.83742874237994491,0.92976181978172456,0.97211554294421587,1],[0.03908892571047292,0.32160074828496149,0.31760230504784981,0.63010445596127129,0.50502512511712216,0.49006841853527322,0.47836388042209804,0.19210820370153378,0.21685781574889915,0.4334035603819909,0.80674863760848181,0.89342435612631865,0.94922925053248386,0.99999999999999989,0.97211554294421587],[0.021247913917191479,0.2929394003864923,0.29481427462986737,0.52049253061851775,0.5022809768247507,0.49410429678919454,0.48638802590019731,0.28615643608504515,0.41815804553267721,0.57462689028380998,0.88500673274776276,0.96341728175464181,0.99999999999999989,0.94922925053248386,0.92976181978172456],[0,0.26430987314095888,0.21601496238710075,0.37968608350388378,0.49411888508073104,0.49877332209597125,0.48903436719372595,0.41989173668637403,0.50396776098934959,0.740952637000304,0.9766622410217044,1,0.96341728175464181,0.89342435612631865,0.83742874237994491],[0.032710155561992464,0.2639781119276795,0.18029080445536633,0.27734299733077139,0.48671458272560131,0.5011529981324897,0.4907969253903387,0.53416140012963753,0.57104612032605262,0.84848512351178695,1,0.9766622410217044,0.88500673274776276,0.80674863760848181,0.72712060687930868],[0.31502795310072373,0.34483131732080302,0.24978177820769615,0.088660489988029972,0.47142696949675617,0.50209850859623162,0.49745492349159076,0.81907818030864832,0.83687858455775377,1,0.84848512351178695,0.740952637000304,0.57462689028380998,0.4334035603819909,0.35177568756702138],[0.59077420902042577,0.42196257178900504,0.45740631071299626,0.16904366383793798,0.47211365138979572,0.49881065827362059,0.50549770217786794,0.81022383619650673,1,0.83687858455775377,0.57104612032605262,0.50396776098934959,0.41815804553267721,0.21685781574889915,0.21168139651146825],[0.63329500075135026,0.53999791814147347,0.40333573958287483,0.12112746887108208,0.4729214806715426,0.49542023457420975,0.49083763225948207,1,0.81022383619650673,0.81907818030864832,0.53416140012963753,0.41989173668637403,0.28615643608504515,0.19210820370153378,0.13448402286301922],[0.4922723430812676,0.48093227221152474,0.49970830625094315,0.47451616493037257,0.47598600390148699,0.48532819713824366,0.99999999999999989,0.49083763225948207,0.50549770217786794,0.49745492349159076,0.4907969253903387,0.48903436719372595,0.48638802590019731,0.47836388042209804,0.47917941088600424],[0.47558950037427927,0.47584442732345933,0.45880253572751201,0.47046926525790855,0.48206619819011948,1,0.48532819713824366,0.49542023457420975,0.49881065827362059,0.50209850859623162,0.5011529981324897,0.49877332209597125,0.49410429678919454,0.49006841853527322,0.48427726767654888],[0.47979847231645334,0.48056150336104797,0.50645137946120389,0.49597643708729583,0.99999999999999989,0.48206619819011948,0.47598600390148699,0.4729214806715426,0.47211365138979572,0.47142696949675617,0.48671458272560131,0.49411888508073104,0.5022809768247507,0.50502512511712216,0.50931166859354493],[0.52649914655823982,0.50118749562646603,0.71522711781636761,1,0.49597643708729583,0.47046926525790855,0.47451616493037257,0.12112746887108208,0.16904366383793798,0.088660489988029972,0.27734299733077139,0.37968608350388378,0.52049253061851775,0.63010445596127129,0.71466256731157829],[0.75473897602860907,0.59020969147545699,1,0.71522711781636761,0.50645137946120389,0.45880253572751201,0.49970830625094315,0.40333573958287483,0.45740631071299626,0.24978177820769615,0.18029080445536633,0.21601496238710075,0.29481427462986737,0.31760230504784981,0.39583706636226279],[0.63309960990735314,1,0.59020969147545699,0.50118749562646603,0.48056150336104797,0.47584442732345933,0.48093227221152474,0.53999791814147347,0.42196257178900504,0.34483131732080302,0.2639781119276795,0.26430987314095888,0.2929394003864923,0.32160074828496149,0.30127425138113828],[1,0.63309960990735314,0.75473897602860907,0.52649914655823982,0.47979847231645334,0.47558950037427927,0.4922723430812676,0.63329500075135026,0.59077420902042577,0.31502795310072373,0.032710155561992464,0,0.021247913917191479,0.03908892571047292,0.1029652801137145]],\"text\":[[\"row: temp_annual_min<br>column: elevation<br>value: -0.74\",\"row: temp_annual_min<br>column: latitude<br>value: -0.36\",\"row: temp_annual_min<br>column: roughness<br>value: -0.17\",\"row: temp_annual_min<br>column: precip_annual<br>value: 0.45\",\"row: temp_annual_min<br>column: northness<br>value: 0.05\",\"row: temp_annual_min<br>column: year<br>value: 0\",\"row: temp_annual_min<br>column: eastness<br>value: -0.01\",\"row: temp_annual_min<br>column: longitude<br>value: -0.68\",\"row: temp_annual_min<br>column: vapor_min<br>value: -0.53\",\"row: temp_annual_min<br>column: vapor_max<br>value: -0.26\",\"row: temp_annual_min<br>column: temp_annual_max<br>value: 0.47\",\"row: temp_annual_min<br>column: temp_annual_mean<br>value: 0.68\",\"row: temp_annual_min<br>column: temp_january_min<br>value: 0.86\",\"row: temp_annual_min<br>column: dew_temp<br>value: 0.95\",\"row: temp_annual_min<br>column: temp_annual_min<br>value: 1\"],[\"row: dew_temp<br>column: elevation<br>value: -0.87\",\"row: dew_temp<br>column: latitude<br>value: -0.32\",\"row: dew_temp<br>column: roughness<br>value: -0.33\",\"row: dew_temp<br>column: precip_annual<br>value: 0.28\",\"row: dew_temp<br>column: northness<br>value: 0.04\",\"row: dew_temp<br>column: year<br>value: 0.01\",\"row: dew_temp<br>column: eastness<br>value: -0.01\",\"row: dew_temp<br>column: longitude<br>value: -0.57\",\"row: dew_temp<br>column: vapor_min<br>value: -0.52\",\"row: dew_temp<br>column: vapor_max<br>value: -0.1\",\"row: dew_temp<br>column: temp_annual_max<br>value: 0.62\",\"row: dew_temp<br>column: temp_annual_mean<br>value: 0.79\",\"row: dew_temp<br>column: temp_january_min<br>value: 0.9\",\"row: dew_temp<br>column: dew_temp<br>value: 1\",\"row: dew_temp<br>column: temp_annual_min<br>value: 0.95\"],[\"row: temp_january_min<br>column: elevation<br>value: -0.9\",\"row: temp_january_min<br>column: latitude<br>value: -0.37\",\"row: temp_january_min<br>column: roughness<br>value: -0.37\",\"row: temp_january_min<br>column: precip_annual<br>value: 0.07\",\"row: temp_january_min<br>column: northness<br>value: 0.03\",\"row: temp_january_min<br>column: year<br>value: 0.02\",\"row: temp_january_min<br>column: eastness<br>value: 0\",\"row: temp_january_min<br>column: longitude<br>value: -0.39\",\"row: temp_january_min<br>column: vapor_min<br>value: -0.13\",\"row: temp_january_min<br>column: vapor_max<br>value: 0.17\",\"row: temp_january_min<br>column: temp_annual_max<br>value: 0.78\",\"row: temp_january_min<br>column: temp_annual_mean<br>value: 0.93\",\"row: temp_january_min<br>column: temp_january_min<br>value: 1\",\"row: temp_january_min<br>column: dew_temp<br>value: 0.9\",\"row: temp_january_min<br>column: temp_annual_min<br>value: 0.86\"],[\"row: temp_annual_mean<br>column: elevation<br>value: -0.94\",\"row: temp_annual_mean<br>column: latitude<br>value: -0.43\",\"row: temp_annual_mean<br>column: roughness<br>value: -0.52\",\"row: temp_annual_mean<br>column: precip_annual<br>value: -0.21\",\"row: temp_annual_mean<br>column: northness<br>value: 0.02\",\"row: temp_annual_mean<br>column: year<br>value: 0.03\",\"row: temp_annual_mean<br>column: eastness<br>value: 0.01\",\"row: temp_annual_mean<br>column: longitude<br>value: -0.13\",\"row: temp_annual_mean<br>column: vapor_min<br>value: 0.04\",\"row: temp_annual_mean<br>column: vapor_max<br>value: 0.5\",\"row: temp_annual_mean<br>column: temp_annual_max<br>value: 0.95\",\"row: temp_annual_mean<br>column: temp_annual_mean<br>value: 1\",\"row: temp_annual_mean<br>column: temp_january_min<br>value: 0.93\",\"row: temp_annual_mean<br>column: dew_temp<br>value: 0.79\",\"row: temp_annual_mean<br>column: temp_annual_min<br>value: 0.68\"],[\"row: temp_annual_max<br>column: elevation<br>value: -0.88\",\"row: temp_annual_max<br>column: latitude<br>value: -0.43\",\"row: temp_annual_max<br>column: roughness<br>value: -0.59\",\"row: temp_annual_max<br>column: precip_annual<br>value: -0.4\",\"row: temp_annual_max<br>column: northness<br>value: 0\",\"row: temp_annual_max<br>column: year<br>value: 0.03\",\"row: temp_annual_max<br>column: eastness<br>value: 0.01\",\"row: temp_annual_max<br>column: longitude<br>value: 0.09\",\"row: temp_annual_max<br>column: vapor_min<br>value: 0.17\",\"row: temp_annual_max<br>column: vapor_max<br>value: 0.71\",\"row: temp_annual_max<br>column: temp_annual_max<br>value: 1\",\"row: temp_annual_max<br>column: temp_annual_mean<br>value: 0.95\",\"row: temp_annual_max<br>column: temp_january_min<br>value: 0.78\",\"row: temp_annual_max<br>column: dew_temp<br>value: 0.62\",\"row: temp_annual_max<br>column: temp_annual_min<br>value: 0.47\"],[\"row: vapor_max<br>column: elevation<br>value: -0.33\",\"row: vapor_max<br>column: latitude<br>value: -0.27\",\"row: vapor_max<br>column: roughness<br>value: -0.46\",\"row: vapor_max<br>column: precip_annual<br>value: -0.77\",\"row: vapor_max<br>column: northness<br>value: -0.03\",\"row: vapor_max<br>column: year<br>value: 0.03\",\"row: vapor_max<br>column: eastness<br>value: 0.02\",\"row: vapor_max<br>column: longitude<br>value: 0.65\",\"row: vapor_max<br>column: vapor_min<br>value: 0.68\",\"row: vapor_max<br>column: vapor_max<br>value: 1\",\"row: vapor_max<br>column: temp_annual_max<br>value: 0.71\",\"row: vapor_max<br>column: temp_annual_mean<br>value: 0.5\",\"row: vapor_max<br>column: temp_january_min<br>value: 0.17\",\"row: vapor_max<br>column: dew_temp<br>value: -0.1\",\"row: vapor_max<br>column: temp_annual_min<br>value: -0.26\"],[\"row: vapor_min<br>column: elevation<br>value: 0.2\",\"row: vapor_min<br>column: latitude<br>value: -0.12\",\"row: vapor_min<br>column: roughness<br>value: -0.05\",\"row: vapor_min<br>column: precip_annual<br>value: -0.62\",\"row: vapor_min<br>column: northness<br>value: -0.03\",\"row: vapor_min<br>column: year<br>value: 0.03\",\"row: vapor_min<br>column: eastness<br>value: 0.04\",\"row: vapor_min<br>column: longitude<br>value: 0.63\",\"row: vapor_min<br>column: vapor_min<br>value: 1\",\"row: vapor_min<br>column: vapor_max<br>value: 0.68\",\"row: vapor_min<br>column: temp_annual_max<br>value: 0.17\",\"row: vapor_min<br>column: temp_annual_mean<br>value: 0.04\",\"row: vapor_min<br>column: temp_january_min<br>value: -0.13\",\"row: vapor_min<br>column: dew_temp<br>value: -0.52\",\"row: vapor_min<br>column: temp_annual_min<br>value: -0.53\"],[\"row: longitude<br>column: elevation<br>value: 0.29\",\"row: longitude<br>column: latitude<br>value: 0.11\",\"row: longitude<br>column: roughness<br>value: -0.16\",\"row: longitude<br>column: precip_annual<br>value: -0.71\",\"row: longitude<br>column: northness<br>value: -0.02\",\"row: longitude<br>column: year<br>value: 0.02\",\"row: longitude<br>column: eastness<br>value: 0.01\",\"row: longitude<br>column: longitude<br>value: 1\",\"row: longitude<br>column: vapor_min<br>value: 0.63\",\"row: longitude<br>column: vapor_max<br>value: 0.65\",\"row: longitude<br>column: temp_annual_max<br>value: 0.09\",\"row: longitude<br>column: temp_annual_mean<br>value: -0.13\",\"row: longitude<br>column: temp_january_min<br>value: -0.39\",\"row: longitude<br>column: dew_temp<br>value: -0.57\",\"row: longitude<br>column: temp_annual_min<br>value: -0.68\"],[\"row: eastness<br>column: elevation<br>value: 0.01\",\"row: eastness<br>column: latitude<br>value: -0.01\",\"row: eastness<br>column: roughness<br>value: 0.03\",\"row: eastness<br>column: precip_annual<br>value: -0.02\",\"row: eastness<br>column: northness<br>value: -0.02\",\"row: eastness<br>column: year<br>value: 0\",\"row: eastness<br>column: eastness<br>value: 1\",\"row: eastness<br>column: longitude<br>value: 0.01\",\"row: eastness<br>column: vapor_min<br>value: 0.04\",\"row: eastness<br>column: vapor_max<br>value: 0.02\",\"row: eastness<br>column: temp_annual_max<br>value: 0.01\",\"row: eastness<br>column: temp_annual_mean<br>value: 0.01\",\"row: eastness<br>column: temp_january_min<br>value: 0\",\"row: eastness<br>column: dew_temp<br>value: -0.01\",\"row: eastness<br>column: temp_annual_min<br>value: -0.01\"],[\"row: year<br>column: elevation<br>value: -0.02\",\"row: year<br>column: latitude<br>value: -0.02\",\"row: year<br>column: roughness<br>value: -0.05\",\"row: year<br>column: precip_annual<br>value: -0.03\",\"row: year<br>column: northness<br>value: -0.01\",\"row: year<br>column: year<br>value: 1\",\"row: year<br>column: eastness<br>value: 0\",\"row: year<br>column: longitude<br>value: 0.02\",\"row: year<br>column: vapor_min<br>value: 0.03\",\"row: year<br>column: vapor_max<br>value: 0.03\",\"row: year<br>column: temp_annual_max<br>value: 0.03\",\"row: year<br>column: temp_annual_mean<br>value: 0.03\",\"row: year<br>column: temp_january_min<br>value: 0.02\",\"row: year<br>column: dew_temp<br>value: 0.01\",\"row: year<br>column: temp_annual_min<br>value: 0\"],[\"row: northness<br>column: elevation<br>value: -0.01\",\"row: northness<br>column: latitude<br>value: -0.01\",\"row: northness<br>column: roughness<br>value: 0.04\",\"row: northness<br>column: precip_annual<br>value: 0.02\",\"row: northness<br>column: northness<br>value: 1\",\"row: northness<br>column: year<br>value: -0.01\",\"row: northness<br>column: eastness<br>value: -0.02\",\"row: northness<br>column: longitude<br>value: -0.02\",\"row: northness<br>column: vapor_min<br>value: -0.03\",\"row: northness<br>column: vapor_max<br>value: -0.03\",\"row: northness<br>column: temp_annual_max<br>value: 0\",\"row: northness<br>column: temp_annual_mean<br>value: 0.02\",\"row: northness<br>column: temp_january_min<br>value: 0.03\",\"row: northness<br>column: dew_temp<br>value: 0.04\",\"row: northness<br>column: temp_annual_min<br>value: 0.05\"],[\"row: precip_annual<br>column: elevation<br>value: 0.08\",\"row: precip_annual<br>column: latitude<br>value: 0.03\",\"row: precip_annual<br>column: roughness<br>value: 0.45\",\"row: precip_annual<br>column: precip_annual<br>value: 1\",\"row: precip_annual<br>column: northness<br>value: 0.02\",\"row: precip_annual<br>column: year<br>value: -0.03\",\"row: precip_annual<br>column: eastness<br>value: -0.02\",\"row: precip_annual<br>column: longitude<br>value: -0.71\",\"row: precip_annual<br>column: vapor_min<br>value: -0.62\",\"row: precip_annual<br>column: vapor_max<br>value: -0.77\",\"row: precip_annual<br>column: temp_annual_max<br>value: -0.4\",\"row: precip_annual<br>column: temp_annual_mean<br>value: -0.21\",\"row: precip_annual<br>column: temp_january_min<br>value: 0.07\",\"row: precip_annual<br>column: dew_temp<br>value: 0.28\",\"row: precip_annual<br>column: temp_annual_min<br>value: 0.45\"],[\"row: roughness<br>column: elevation<br>value: 0.52\",\"row: roughness<br>column: latitude<br>value: 0.2\",\"row: roughness<br>column: roughness<br>value: 1\",\"row: roughness<br>column: precip_annual<br>value: 0.45\",\"row: roughness<br>column: northness<br>value: 0.04\",\"row: roughness<br>column: year<br>value: -0.05\",\"row: roughness<br>column: eastness<br>value: 0.03\",\"row: roughness<br>column: longitude<br>value: -0.16\",\"row: roughness<br>column: vapor_min<br>value: -0.05\",\"row: roughness<br>column: vapor_max<br>value: -0.46\",\"row: roughness<br>column: temp_annual_max<br>value: -0.59\",\"row: roughness<br>column: temp_annual_mean<br>value: -0.52\",\"row: roughness<br>column: temp_january_min<br>value: -0.37\",\"row: roughness<br>column: dew_temp<br>value: -0.33\",\"row: roughness<br>column: temp_annual_min<br>value: -0.17\"],[\"row: latitude<br>column: elevation<br>value: 0.29\",\"row: latitude<br>column: latitude<br>value: 1\",\"row: latitude<br>column: roughness<br>value: 0.2\",\"row: latitude<br>column: precip_annual<br>value: 0.03\",\"row: latitude<br>column: northness<br>value: -0.01\",\"row: latitude<br>column: year<br>value: -0.02\",\"row: latitude<br>column: eastness<br>value: -0.01\",\"row: latitude<br>column: longitude<br>value: 0.11\",\"row: latitude<br>column: vapor_min<br>value: -0.12\",\"row: latitude<br>column: vapor_max<br>value: -0.27\",\"row: latitude<br>column: temp_annual_max<br>value: -0.43\",\"row: latitude<br>column: temp_annual_mean<br>value: -0.43\",\"row: latitude<br>column: temp_january_min<br>value: -0.37\",\"row: latitude<br>column: dew_temp<br>value: -0.32\",\"row: latitude<br>column: temp_annual_min<br>value: -0.36\"],[\"row: elevation<br>column: elevation<br>value: 1\",\"row: elevation<br>column: latitude<br>value: 0.29\",\"row: elevation<br>column: roughness<br>value: 0.52\",\"row: elevation<br>column: precip_annual<br>value: 0.08\",\"row: elevation<br>column: northness<br>value: -0.01\",\"row: elevation<br>column: year<br>value: -0.02\",\"row: elevation<br>column: eastness<br>value: 0.01\",\"row: elevation<br>column: longitude<br>value: 0.29\",\"row: elevation<br>column: vapor_min<br>value: 0.2\",\"row: elevation<br>column: vapor_max<br>value: -0.33\",\"row: elevation<br>column: temp_annual_max<br>value: -0.88\",\"row: elevation<br>column: temp_annual_mean<br>value: -0.94\",\"row: elevation<br>column: temp_january_min<br>value: -0.9\",\"row: elevation<br>column: dew_temp<br>value: -0.87\",\"row: elevation<br>column: temp_annual_min<br>value: -0.74\"]],\"colorscale\":[[0,\"#7C0622\"],[0.021247913917191479,\"#8B0B24\"],[0.032710155561992464,\"#930E26\"],[0.03908892571047292,\"#980F26\"],[0.088660489988029972,\"#B7222F\"],[0.1029652801137145,\"#BC2C34\"],[0.12112746887108208,\"#C2383A\"],[0.13448402286301922,\"#C6423E\"],[0.16904366383793798,\"#D35A4A\"],[0.18029080445536633,\"#D7614F\"],[0.19210820370153378,\"#DA6954\"],[0.21168139651146825,\"#E0765E\"],[0.21601496238710075,\"#E17960\"],[0.21685781574889915,\"#E17A61\"],[0.24978177820769615,\"#EB9172\"],[0.2639781119276795,\"#EF9A79\"],[0.26430987314095888,\"#EF9A7A\"],[0.27734299733077139,\"#F2A381\"],[0.28615643608504515,\"#F4A886\"],[0.2929394003864923,\"#F5AC8B\"],[0.29481427462986737,\"#F5AD8C\"],[0.30127425138113828,\"#F5B090\"],[0.31502795310072373,\"#F7B799\"],[0.31760230504784981,\"#F7B89B\"],[0.32160074828496149,\"#F7BB9E\"],[0.34483131732080302,\"#FAC7AD\"],[0.35177568756702138,\"#FACAB2\"],[0.37968608350388378,\"#FBD8C3\"],[0.39583706636226279,\"#FCDECC\"],[0.40333573958287483,\"#FBE0D0\"],[0.41815804553267721,\"#FBE4D7\"],[0.41989173668637403,\"#FBE5D8\"],[0.42196257178900504,\"#FBE5D9\"],[0.4334035603819909,\"#FAE8DE\"],[0.45740631071299626,\"#F8EFEA\"],[0.45880253572751201,\"#F8EFEA\"],[0.47046926525790855,\"#F7F3F0\"],[0.47142696949675617,\"#F7F3F0\"],[0.47211365138979572,\"#F7F3F1\"],[0.4729214806715426,\"#F7F3F1\"],[0.47451616493037257,\"#F7F4F2\"],[0.47558950037427927,\"#F7F4F2\"],[0.47584442732345933,\"#F7F4F2\"],[0.47598600390148699,\"#F7F4F2\"],[0.47836388042209804,\"#F6F4F3\"],[0.47917941088600424,\"#F6F4F3\"],[0.47979847231645334,\"#F6F4F3\"],[0.48056150336104797,\"#F6F4F3\"],[0.48093227221152474,\"#F6F4F3\"],[0.48206619819011948,\"#F6F4F3\"],[0.48427726767654888,\"#F5F4F4\"],[0.48532819713824366,\"#F5F4F4\"],[0.48638802590019731,\"#F5F5F4\"],[0.48671458272560131,\"#F5F5F4\"],[0.48903436719372595,\"#F4F5F5\"],[0.49006841853527322,\"#F4F5F5\"],[0.4907969253903387,\"#F4F5F5\"],[0.49083763225948207,\"#F4F5F5\"],[0.4922723430812676,\"#F4F5F5\"],[0.49410429678919454,\"#F3F5F6\"],[0.49411888508073104,\"#F3F5F6\"],[0.49542023457420975,\"#F3F5F6\"],[0.49597643708729583,\"#F3F5F6\"],[0.49745492349159076,\"#F2F5F6\"],[0.49877332209597125,\"#F2F4F6\"],[0.49881065827362059,\"#F2F4F6\"],[0.49970830625094315,\"#F2F4F6\"],[0.5011529981324897,\"#F1F4F6\"],[0.50118749562646603,\"#F1F4F6\"],[0.50209850859623162,\"#F1F4F5\"],[0.5022809768247507,\"#F1F4F5\"],[0.50396776098934959,\"#F0F4F5\"],[0.50502512511712216,\"#F0F3F5\"],[0.50549770217786794,\"#EFF3F5\"],[0.50645137946120389,\"#EFF3F5\"],[0.50931166859354493,\"#EEF2F5\"],[0.52049253061851775,\"#EAF0F4\"],[0.52649914655823982,\"#E7EFF4\"],[0.53416140012963753,\"#E5EEF3\"],[0.53999791814147347,\"#E2EDF3\"],[0.57104612032605262,\"#D7E8F1\"],[0.57462689028380998,\"#D6E7F1\"],[0.59020969147545699,\"#CFE4EF\"],[0.59077420902042577,\"#CEE3EE\"],[0.63010445596127129,\"#B7D8E8\"],[0.63309960990735314,\"#B5D7E8\"],[0.63329500075135026,\"#B5D7E8\"],[0.71466256731157829,\"#80B9D8\"],[0.71522711781636761,\"#7FB9D7\"],[0.72712060687930868,\"#76B3D4\"],[0.740952637000304,\"#6CACD1\"],[0.75473897602860907,\"#61A6CD\"],[0.80674863760848181,\"#3F8DC0\"],[0.81022383619650673,\"#3D8BBF\"],[0.81907818030864832,\"#3A88BD\"],[0.83687858455775377,\"#3480B9\"],[0.83742874237994491,\"#3480B9\"],[0.84848512351178695,\"#317BB6\"],[0.88500673274776276,\"#246BAE\"],[0.89342435612631865,\"#2267AC\"],[0.92976181978172456,\"#185593\"],[0.94922925053248386,\"#134B85\"],[0.96341728175464181,\"#0E437B\"],[0.97211554294421587,\"#0C3F75\"],[0.9766622410217044,\"#0B3C72\"],[0.99999999999999989,\"#053061\"],[1,\"#053061\"]],\"type\":\"heatmap\",\"showscale\":false,\"autocolorscale\":false,\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1],\"y\":[1],\"name\":\"7474dea1f01f9d643aa4b0cb0ec00555\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#67001F\"],[0.0033444816053511683,\"#69011F\"],[0.0066889632107023367,\"#6C0120\"],[0.010033444816053505,\"#6E0220\"],[0.013377926421404673,\"#710220\"],[0.016722408026755842,\"#730321\"],[0.02006688963210701,\"#760421\"],[0.023411371237458178,\"#780521\"],[0.026755852842809347,\"#7B0522\"],[0.030100334448160515,\"#7D0622\"],[0.033444816053511683,\"#800722\"],[0.036789297658862852,\"#820823\"],[0.04013377926421402,\"#840923\"],[0.043478260869565188,\"#870A23\"],[0.046822742474916357,\"#890A24\"],[0.050167224080267581,\"#8C0B24\"],[0.053511705685618749,\"#8E0C25\"],[0.056856187290969917,\"#910D25\"],[0.060200668896321086,\"#930E26\"],[0.063545150501672254,\"#960F26\"],[0.066889632107023422,\"#980F27\"],[0.070234113712374591,\"#9B1027\"],[0.073578595317725759,\"#9E1127\"],[0.076923076923076927,\"#A01228\"],[0.080267558528428096,\"#A31328\"],[0.083612040133779264,\"#A51428\"],[0.086956521739130432,\"#A81529\"],[0.090301003344481601,\"#AA1629\"],[0.093645484949832769,\"#AC172A\"],[0.096989966555183937,\"#AF182A\"],[0.10033444816053511,\"#B1192B\"],[0.10367892976588627,\"#B31A2C\"],[0.10702341137123744,\"#B41D2D\"],[0.11036789297658861,\"#B5202E\"],[0.11371237458193978,\"#B7222F\"],[0.11705685618729095,\"#B82430\"],[0.12040133779264217,\"#B92731\"],[0.12374581939799334,\"#BA2932\"],[0.12709030100334451,\"#BC2B34\"],[0.13043478260869568,\"#BD2E35\"],[0.13377926421404684,\"#BE3036\"],[0.13712374581939801,\"#BF3237\"],[0.14046822742474918,\"#C03438\"],[0.14381270903010035,\"#C13739\"],[0.14715719063545152,\"#C2393A\"],[0.15050167224080269,\"#C43C3C\"],[0.15384615384615385,\"#C53E3D\"],[0.15719063545150502,\"#C6413E\"],[0.16053511705685619,\"#C7433F\"],[0.16387959866220736,\"#C84540\"],[0.16722408026755853,\"#CA4841\"],[0.1705685618729097,\"#CB4A42\"],[0.17391304347826086,\"#CC4D44\"],[0.17725752508361203,\"#CD4F45\"],[0.1806020066889632,\"#CF5246\"],[0.18394648829431437,\"#D05447\"],[0.18729096989966554,\"#D15748\"],[0.19063545150501671,\"#D2594A\"],[0.19397993311036787,\"#D45B4B\"],[0.19732441471571904,\"#D55D4C\"],[0.20066889632107021,\"#D6604E\"],[0.20401337792642138,\"#D7624F\"],[0.20735785953177255,\"#D86451\"],[0.21070234113712372,\"#D96752\"],[0.21404682274247488,\"#DA6954\"],[0.21739130434782605,\"#DB6B55\"],[0.22073578595317722,\"#DC6D57\"],[0.22408026755852839,\"#DD7059\"],[0.22742474916387956,\"#DE725B\"],[0.23076923076923073,\"#DF745C\"],[0.23411371237458189,\"#E0775E\"],[0.23745819397993312,\"#E17960\"],[0.24080267558528429,\"#E27B62\"],[0.24414715719063546,\"#E37D64\"],[0.24749163879598662,\"#E48065\"],[0.25083612040133779,\"#E58267\"],[0.25418060200668896,\"#E68569\"],[0.25752508361204013,\"#E7876B\"],[0.2608695652173913,\"#E88A6D\"],[0.26421404682274247,\"#E98C6E\"],[0.26755852842809363,\"#EA8F70\"],[0.2709030100334448,\"#EB9172\"],[0.27424749163879597,\"#EC9374\"],[0.27759197324414714,\"#ED9576\"],[0.28093645484949831,\"#EE9877\"],[0.28428093645484948,\"#EF9A79\"],[0.28762541806020064,\"#EF9C7B\"],[0.29096989966555181,\"#F09E7D\"],[0.29431438127090298,\"#F1A07F\"],[0.29765886287625415,\"#F2A381\"],[0.30100334448160537,\"#F3A583\"],[0.30434782608695654,\"#F4A785\"],[0.30769230769230771,\"#F4A987\"],[0.31103678929765888,\"#F5AB89\"],[0.31438127090301005,\"#F5AC8C\"],[0.31772575250836121,\"#F5AE8E\"],[0.32107023411371238,\"#F6B090\"],[0.32441471571906355,\"#F6B293\"],[0.32775919732441472,\"#F6B495\"],[0.33110367892976589,\"#F6B597\"],[0.33444816053511706,\"#F7B799\"],[0.33779264214046822,\"#F7B99C\"],[0.34113712374581939,\"#F7BB9E\"],[0.34448160535117056,\"#F8BDA0\"],[0.34782608695652173,\"#F8BEA3\"],[0.3511705685618729,\"#F8C0A5\"],[0.35451505016722407,\"#F9C2A7\"],[0.35785953177257523,\"#F9C4A9\"],[0.3612040133779264,\"#F9C6AC\"],[0.36454849498327757,\"#FAC7AE\"],[0.36789297658862874,\"#FAC9B0\"],[0.37123745819397991,\"#FACBB3\"],[0.37458193979933108,\"#FACDB5\"],[0.37792642140468224,\"#FBCFB7\"],[0.38127090301003341,\"#FBD1BA\"],[0.38461538461538458,\"#FBD2BC\"],[0.38795986622073581,\"#FBD4BE\"],[0.39130434782608697,\"#FBD6C0\"],[0.39464882943143814,\"#FBD7C2\"],[0.39799331103678931,\"#FCD9C4\"],[0.40133779264214048,\"#FCDAC6\"],[0.40468227424749165,\"#FCDBC8\"],[0.40802675585284282,\"#FCDDCA\"],[0.41137123745819398,\"#FCDECC\"],[0.41471571906354515,\"#FCDFCD\"],[0.41806020066889632,\"#FCE0CF\"],[0.42140468227424749,\"#FBE1D0\"],[0.42474916387959866,\"#FBE2D2\"],[0.42809364548494983,\"#FBE3D4\"],[0.43143812709030099,\"#FBE4D5\"],[0.43478260869565216,\"#FBE5D7\"],[0.43812709030100333,\"#FBE5D9\"],[0.4414715719063545,\"#FAE6DA\"],[0.44481605351170567,\"#FAE7DC\"],[0.44816053511705684,\"#FAE8DE\"],[0.451505016722408,\"#FAE9DF\"],[0.45484949832775917,\"#F9EAE1\"],[0.45819397993311034,\"#F9EBE3\"],[0.46153846153846151,\"#F9ECE4\"],[0.46488294314381268,\"#F8EDE6\"],[0.46822742474916385,\"#F8EEE7\"],[0.47157190635451507,\"#F8EFE9\"],[0.47491638795986624,\"#F8F0EB\"],[0.47826086956521741,\"#F8F1EC\"],[0.48160535117056857,\"#F7F2EE\"],[0.48494983277591974,\"#F7F3F0\"],[0.48829431438127091,\"#F7F4F1\"],[0.49163879598662208,\"#F7F4F2\"],[0.49498327759197325,\"#F6F4F3\"],[0.49832775919732442,\"#F5F4F4\"],[0.50167224080267558,\"#F5F5F4\"],[0.50501672240802675,\"#F4F5F5\"],[0.50836120401337792,\"#F3F5F6\"],[0.51170568561872909,\"#F2F5F6\"],[0.51505016722408026,\"#F1F4F6\"],[0.51839464882943143,\"#F0F3F5\"],[0.52173913043478259,\"#EEF3F5\"],[0.52508361204013376,\"#EDF2F5\"],[0.52842809364548493,\"#ECF1F4\"],[0.5317725752508361,\"#EBF1F4\"],[0.53511705685618727,\"#E9F0F4\"],[0.53846153846153844,\"#E8EFF4\"],[0.5418060200668896,\"#E7EFF3\"],[0.54515050167224077,\"#E5EEF3\"],[0.54849498327759194,\"#E4EDF3\"],[0.55183946488294311,\"#E3EDF3\"],[0.55518394648829428,\"#E1ECF3\"],[0.55852842809364545,\"#E0ECF3\"],[0.56187290969899661,\"#DFEBF2\"],[0.56521739130434778,\"#DDEBF2\"],[0.56856187290969895,\"#DCEAF2\"],[0.57190635451505012,\"#DBEAF2\"],[0.57525083612040129,\"#DAE9F2\"],[0.57859531772575246,\"#D9E9F1\"],[0.58193979933110362,\"#D7E8F1\"],[0.58528428093645479,\"#D6E7F1\"],[0.58862876254180596,\"#D5E7F0\"],[0.59197324414715713,\"#D4E6F0\"],[0.5953177257525083,\"#D2E5EF\"],[0.59866220735785947,\"#D0E4EF\"],[0.60200668896321075,\"#CFE4EF\"],[0.60535117056856191,\"#CDE3EE\"],[0.60869565217391308,\"#CBE2EE\"],[0.61204013377926425,\"#C9E1ED\"],[0.61538461538461542,\"#C7E0ED\"],[0.61872909698996659,\"#C5DFEC\"],[0.62207357859531776,\"#C3DEEC\"],[0.62541806020066892,\"#C1DCEB\"],[0.62876254180602009,\"#BEDBEB\"],[0.63210702341137126,\"#BCDAEA\"],[0.63545150501672243,\"#BAD9E9\"],[0.6387959866220736,\"#B8D8E9\"],[0.64214046822742477,\"#B6D7E8\"],[0.64548494983277593,\"#B4D6E7\"],[0.6488294314381271,\"#B2D5E7\"],[0.65217391304347827,\"#B0D4E6\"],[0.65551839464882944,\"#ADD3E6\"],[0.65886287625418061,\"#ABD2E5\"],[0.66220735785953178,\"#A9D1E4\"],[0.66555183946488294,\"#A7D0E4\"],[0.66889632107023411,\"#A5CFE3\"],[0.67224080267558528,\"#A3CDE2\"],[0.67558528428093645,\"#A1CCE2\"],[0.67892976588628762,\"#9FCBE1\"],[0.68227424749163879,\"#9CCAE1\"],[0.68561872909698995,\"#9AC9E0\"],[0.68896321070234112,\"#98C8E0\"],[0.69230769230769229,\"#96C7DF\"],[0.69565217391304346,\"#94C5DF\"],[0.69899665551839463,\"#91C4DE\"],[0.7023411371237458,\"#8FC2DD\"],[0.70568561872909696,\"#8CC1DC\"],[0.70903010033444813,\"#8ABFDB\"],[0.7123745819397993,\"#87BEDA\"],[0.71571906354515047,\"#85BCDA\"],[0.71906354515050164,\"#82BBD9\"],[0.72240802675585281,\"#80B9D8\"],[0.72575250836120397,\"#7DB7D7\"],[0.72909698996655514,\"#7AB6D6\"],[0.73244147157190631,\"#78B4D5\"],[0.73578595317725748,\"#75B2D4\"],[0.73913043478260865,\"#73B1D3\"],[0.74247491638795982,\"#70AFD2\"],[0.74581939799331098,\"#6DAED1\"],[0.74916387959866215,\"#6BACD0\"],[0.75250836120401332,\"#68AAD0\"],[0.75585284280936449,\"#65A9CF\"],[0.75919732441471566,\"#63A7CE\"],[0.76254180602006683,\"#60A5CD\"],[0.76588628762541799,\"#5EA4CC\"],[0.76923076923076916,\"#5BA2CB\"],[0.77257525083612044,\"#58A0CA\"],[0.77591973244147161,\"#569FC9\"],[0.77926421404682278,\"#539DC8\"],[0.78260869565217395,\"#519CC7\"],[0.78595317725752512,\"#4E9AC6\"],[0.78929765886287628,\"#4B98C6\"],[0.79264214046822745,\"#4997C5\"],[0.79598662207357862,\"#4695C4\"],[0.79933110367892979,\"#4593C3\"],[0.80267558528428096,\"#4392C2\"],[0.80602006688963213,\"#4290C2\"],[0.80936454849498329,\"#408EC1\"],[0.81270903010033446,\"#3F8DC0\"],[0.81605351170568563,\"#3D8BBF\"],[0.8193979933110368,\"#3C8ABE\"],[0.82274247491638797,\"#3B88BD\"],[0.82608695652173914,\"#3A87BD\"],[0.8294314381270903,\"#3985BC\"],[0.83277591973244147,\"#3784BB\"],[0.83612040133779264,\"#3682BA\"],[0.83946488294314381,\"#3581B9\"],[0.84280936454849498,\"#347FB9\"],[0.84615384615384615,\"#337EB8\"],[0.84949832775919731,\"#327CB7\"],[0.85284280936454848,\"#317BB6\"],[0.85618729096989965,\"#2F79B5\"],[0.85953177257525082,\"#2E78B5\"],[0.86287625418060199,\"#2D76B4\"],[0.86622073578595316,\"#2C75B3\"],[0.86956521739130432,\"#2B74B3\"],[0.87290969899665549,\"#2A72B2\"],[0.87625418060200666,\"#2871B1\"],[0.87959866220735783,\"#276FB0\"],[0.882943143812709,\"#266DB0\"],[0.88628762541806017,\"#256CAF\"],[0.88963210702341133,\"#246AAE\"],[0.8929765886287625,\"#2368AD\"],[0.89632107023411367,\"#2267AC\"],[0.89966555183946484,\"#2165AB\"],[0.90301003344481601,\"#2064A9\"],[0.90635451505016718,\"#1F62A6\"],[0.90969899665551834,\"#1E60A4\"],[0.91304347826086951,\"#1D5FA2\"],[0.91638795986622068,\"#1C5D9F\"],[0.91973244147157185,\"#1B5B9D\"],[0.92307692307692302,\"#1A599A\"],[0.92642140468227419,\"#195898\"],[0.92976588628762535,\"#185695\"],[0.93311036789297652,\"#175492\"],[0.93645484949832769,\"#175290\"],[0.93979933110367886,\"#16508D\"],[0.94314381270903014,\"#154F8B\"],[0.94648829431438131,\"#144D88\"],[0.94983277591973247,\"#134B86\"],[0.95317725752508364,\"#124983\"],[0.95652173913043481,\"#114781\"],[0.95986622073578598,\"#10467E\"],[0.96321070234113715,\"#0F447C\"],[0.96655518394648832,\"#0E427A\"],[0.96989966555183948,\"#0D4077\"],[0.97324414715719065,\"#0C3E75\"],[0.97658862876254182,\"#0B3D72\"],[0.97993311036789299,\"#0A3B70\"],[0.98327759197324416,\"#09396D\"],[0.98662207357859533,\"#08376B\"],[0.98996655518394649,\"#073568\"],[0.99331103678929766,\"#063466\"],[0.99665551839464883,\"#063263\"],[1,\"#053061\"]],\"colorbar\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"thickness\":23.039999999999996,\"title\":null,\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"tickmode\":\"array\",\"ticktext\":[\"-1.0\",\"-0.5\",\"0.0\",\"0.5\",\"1.0\"],\"tickvals\":[0.0016666666666666668,0.2508333333333333,0.49999999999999994,0.74916666666666665,0.99833333333333329],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y2\",\"frame\":null},{\"x\":[4.6539480487493945,4.6539480487493945,null,4.6539480487493945,1.9227569644534859,null,1.9227569644534859,1.9227569644534859,null,1.9227569644534859,0.91461325281991224,null,0.91461325281991224,0.91461325281991224,null,0.91461325281991224,0.38508187790149317,null,0.38508187790149317,0.38508187790149317,null,0.38508187790149317,0,null,0.38508187790149317,0.38508187790149317,null,0.38508187790149317,0,null,0.91461325281991224,0.91461325281991224,null,0.91461325281991224,0,null,1.9227569644534859,1.9227569644534859,null,1.9227569644534859,0.51036796017875319,null,0.51036796017875319,0.51036796017875319,null,0.51036796017875319,0,null,0.51036796017875319,0.51036796017875319,null,0.51036796017875319,0,null,4.6539480487493945,4.6539480487493945,null,4.6539480487493945,3.6432727838804477,null,3.6432727838804477,3.6432727838804477,null,3.6432727838804477,1.5317404976901809,null,1.5317404976901809,1.5317404976901809,null,1.5317404976901809,0,null,1.5317404976901809,1.5317404976901809,null,1.5317404976901809,0.68995191958430879,null,0.68995191958430879,0.68995191958430879,null,0.68995191958430879,0,null,0.68995191958430879,0.68995191958430879,null,0.68995191958430879,0,null,3.6432727838804477,3.6432727838804477,null,3.6432727838804477,2.8412876818251118,null,2.8412876818251118,2.8412876818251118,null,2.8412876818251118,2.1184883527549161,null,2.1184883527549161,2.1184883527549161,null,2.1184883527549161,1.4468096220230999,null,1.4468096220230999,1.4468096220230999,null,1.4468096220230999,1.4183664376021465,null,1.4183664376021465,1.4183664376021465,null,1.4183664376021465,0,null,1.4183664376021465,1.4183664376021465,null,1.4183664376021465,0,null,1.4468096220230999,1.4468096220230999,null,1.4468096220230999,0,null,2.1184883527549161,2.1184883527549161,null,2.1184883527549161,0,null,2.8412876818251118,2.8412876818251118,null,2.8412876818251118,1.5690898172853271,null,1.5690898172853271,1.5690898172853271,null,1.5690898172853271,1.296894045873985,null,1.296894045873985,1.296894045873985,null,1.296894045873985,0,null,1.296894045873985,1.296894045873985,null,1.296894045873985,0,null,1.5690898172853271,1.5690898172853271,null,1.5690898172853271,0],\"y\":[6.546875,3.375,null,3.375,3.375,null,3.375,2.25,null,2.25,2.25,null,2.25,1.5,null,1.5,1.5,null,1.5,1,null,1,1,null,1.5,2,null,2,2,null,2.25,3,null,3,3,null,3.375,4.5,null,4.5,4.5,null,4.5,4,null,4,4,null,4.5,5,null,5,5,null,6.546875,9.71875,null,9.71875,9.71875,null,9.71875,6.75,null,6.75,6.75,null,6.75,6,null,6,6,null,6.75,7.5,null,7.5,7.5,null,7.5,7,null,7,7,null,7.5,8,null,8,8,null,9.71875,12.6875,null,12.6875,12.6875,null,12.6875,11.125,null,11.125,11.125,null,11.125,10.25,null,10.25,10.25,null,10.25,9.5,null,9.5,9.5,null,9.5,9,null,9,9,null,9.5,10,null,10,10,null,10.25,11,null,11,11,null,11.125,12,null,12,12,null,12.6875,14.25,null,14.25,14.25,null,14.25,13.5,null,13.5,13.5,null,13.5,13,null,13,13,null,13.5,14,null,14,14,null,14.25,15,null,15,15],\"text\":[\"y: 4.6539\",\"y: 4.6539\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.3851\",\"y: 0.3851\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 0.9146\",\"y: 0.9146\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 1.9228\",\"y: 1.9228\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 0.5104\",\"y: 0.5104\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 4.6539\",\"y: 4.6539\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 1.5317\",\"y: 1.5317\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 0.6900\",\"y: 0.6900\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 3.6433\",\"y: 3.6433\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4184\",\"y: 1.4184\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 1.4468\",\"y: 1.4468\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.1185\",\"y: 2.1185\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 2.8413\",\"y: 2.8413\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.2969\",\"y: 1.2969\",null,\"y: 1.5691\",\"y: 1.5691\",null,\"y: 1.5691\",\"y: 1.5691\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[4.6539480487493945,1.9227569644534859,0.91461325281991224,0.38508187790149317,0,0,0,0.51036796017875319,0,0,3.6432727838804477,1.5317404976901809,0,0.68995191958430879,0,0,2.8412876818251118,2.1184883527549161,1.4468096220230999,1.4183664376021465,0,0,0,0,1.5690898172853271,1.296894045873985,0,0,0],\"y\":[6.546875,3.375,2.25,1.5,1,2,3,4.5,4,5,9.71875,6.75,6,7.5,7,8,12.6875,11.125,10.25,9.5,9,10,11,12,14.25,13.5,13,14,15],\"text\":[\"y: 4.6539\",\"y: 1.9228\",\"y: 0.9146\",\"y: 0.3851\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.5104\",\"y: 0.0000\",\"y: 0.0000\",\"y: 3.6433\",\"y: 1.5317\",\"y: 0.0000\",\"y: 0.6900\",\"y: 0.0000\",\"y: 0.0000\",\"y: 2.8413\",\"y: 2.1185\",\"y: 1.4468\",\"y: 1.4184\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.0000\",\"y: 1.5691\",\"y: 1.2969\",\"y: 0.0000\",\"y: 0.0000\",\"y: 0.0000\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"transparent\",\"opacity\":1,\"size\":null,\"symbol\":null,\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,0.80000000000000004],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.5,15.5],\"tickmode\":\"array\",\"ticktext\":[\"elevation\",\"latitude\",\"roughness\",\"precip_annual\",\"northness\",\"year\",\"eastness\",\"longitude\",\"vapor_min\",\"vapor_max\",\"temp_annual_max\",\"temp_annual_mean\",\"temp_january_min\",\"dew_temp\",\"temp_annual_min\"],\"tickvals\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"categoryorder\":\"array\",\"categoryarray\":[\"elevation\",\"latitude\",\"roughness\",\"precip_annual\",\"northness\",\"year\",\"eastness\",\"longitude\",\"vapor_min\",\"vapor_max\",\"temp_annual_max\",\"temp_annual_mean\",\"temp_january_min\",\"dew_temp\",\"temp_annual_min\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835205},\"tickangle\":-45,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176002,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"xaxis2\":{\"domain\":[0.80000000000000004,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"y2\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,4.6539480487493945],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[0,1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis2\":{\"domain\":[0,0.80000000000000004],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.5,15.5],\"tickmode\":\"array\",\"ticktext\":[\"temp_annual_min\",\"dew_temp\",\"temp_january_min\",\"temp_annual_mean\",\"temp_annual_max\",\"vapor_max\",\"vapor_min\",\"longitude\",\"eastness\",\"year\",\"northness\",\"precip_annual\",\"roughness\",\"latitude\",\"elevation\"],\"tickvals\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"categoryorder\":\"array\",\"categoryarray\":[\"temp_annual_min\",\"dew_temp\",\"temp_january_min\",\"temp_annual_mean\",\"temp_annual_max\",\"vapor_max\",\"vapor_min\",\"longitude\",\"eastness\",\"year\",\"northness\",\"precip_annual\",\"roughness\",\"latitude\",\"elevation\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835205},\"tickangle\":-0,\"showline\":true,\"linecolor\":\"rgba(0,0,0,1)\",\"linewidth\":0.66417600664176002,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0.80000000000000004,1],\"automargin\":true,\"showticklabels\":false,\"showgrid\":false,\"zeroline\":false,\"anchor\":\"x\",\"type\":\"linear\",\"autorange\":false,\"range\":[0,4.6539480487493945],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[0,1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"gridcolor\":null,\"gridwidth\":0,\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"annotations\":[],\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"layer\":\"below\",\"x0\":0,\"x1\":0.80000000000000004,\"y0\":0.80000000000000004,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"layer\":\"below\",\"x0\":0,\"x1\":0.80000000000000004,\"y0\":0,\"y1\":0.80000000000000004},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"layer\":\"below\",\"x0\":0.80000000000000004,\"x1\":1,\"y0\":0,\"y1\":0.80000000000000004}],\"images\":[],\"margin\":{\"t\":10,\"r\":150,\"b\":50,\"l\":215},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"y\":1,\"yanchor\":\"top\"},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"title\":\"\"},\"attrs\":{\"1549d7d973fd7\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"type\":\"scatter\"},\"1549d54e07cab\":{\"x\":{},\"y\":{},\"colour\":{},\"shape\":{},\"size\":{}},\"1549d5e18ea15\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20]},\"1549d4f3f867\":{\"x\":{},\"y\":{},\"fill\":{},\"text\":{},\"type\":\"heatmap\"},\"1549d38c422ea\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{},\"colour\":{},\"linetype\":{},\"size\":{},\"type\":\"scatter\"},\"1549d54d04dc3\":{\"x\":{},\"y\":{},\"colour\":{},\"shape\":{},\"size\":{}}},\"source\":\"A\",\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"displaylogo\":false,\"modeBarButtonsToRemove\":[\"sendDataToCloud\",\"select2d\",\"lasso2d\",\"autoScale2d\",\"hoverClosestCartesian\",\"hoverCompareCartesian\",\"sendDataToCloud\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nA heatmap of a correlation matrix for fifteen predictors spatial, ordered using a hierarchical clustering algorithm.\n:::\n:::\n\n\nSimilar redundancy can occur in categorical predictors. In this case, measures of similarity can be used to filter the predictors in the same way. \n\nUnsupervised filters are only needed in specific circumstances. Some models (such as trees) are resistant to the distributions of the predictor’s data^[Zero-variance predictors do not harm these models, but determining such predictors computationally will speed up their training.], while others are excessively sensitive. \n\n<a href=\"https://tidymodels.aml4td.org/chapters/feature-selection.html#sec-unsupervised-selection\">{{< fa brands r-project size=Large >}}</a>\n\n## Classes of Supervised Methods {#sec-selection-methods}\n\nThere are three main strategies for _supervised_ feature selection. The first and most effective was discussed: automatic selection occurs when a subset of predictors is determined during model training. We’ll discuss this more in the next section. \n\nThe second supervised strategy is called **wrappers**. In this case, a sequential algorithm proposes feature subsets, fits the model with these subsets, and then determines a better subset from the results. This sounds similar to iterative optimization because it is. Many of the same tools can be used. Wrappers are the most thorough approach to searching the space of feature subsets, but this can come with an enormous computational cost. \n\nA third strategy is to use a **filter** to screen predictors before adding them to the model. For example, the analysis shown in @fig-delivery-increases computed how each item in a food order impacted the delivery time.  We could have applied a filter where we only used food item predictors whose lower confidence interval for the increase in time was greater than one. The idea behind the filter is that it is applied once prior to the model fit. \n\nThe next few sections will describe the mechanics of these techniques. However, how we utilize these algorithms is tricky. We definitely want to avoid overfitting the predictor set to the training data. \n\n## Automatic Selection {#sec-automatic-selection}\n\n\n\nTo more closely demonstrate how automatic feature selection works, let’s return to the Cubist model fit to the delivery data in @sec-model-development-whole-game. That model created a series of regression trees, and converted them to rules (i.e., a path through the tree), then fit regression models for every rule. Recall that there was a sizable number of rules (2,007) each with its own linear regression. Despite the size of the rule set, only 13 of the original 30 predictors in the data set were used in rules or model fits; 17 were judged to be irrelevant for predicting delivery times. \n\n::: {.important-box}\nThis shows that we can often reduce the number of features for free. \n:::\n\nDifferent models view the training data differently, and the list of relevant predictors will likely change from model to model. When we fit a MARS model (@sec-reg-mars) to the data, only 9 original predictors were used. If we use automatic selection methods to understand what is important, we should fit a variety of different models and create a consensus estimate of which predictors are \"active\" for the data set.  \n\n<a href=\"https://tidymodels.aml4td.org/chapters/feature-selection.html#sec-automatic-selection\">{{< fa brands r-project size=Large >}}</a>\n\n## Wrapper Methods  {#sec-wrappers}\n\nWrapper methods [@kohavi1998wrapper] use an overarching search method to optimize **binary indicators**, one for each potential predictor, that control which predictors are given to the model.\n\nThe most popular approach is recursive feature elimination (RFE), which starts with the complete set of predictors and uses a mechanism to rank each in terms of their utility for predicting the outcome [@guyon2002gene]. Using this ordering, predictors are successively removed while performance is monitored. The performance profile determines the optimal subset size, and the most important predictors are included in the model. RFE is greedy, though; it predetermines the order that the predictors are eliminated and will never consider a subset that is inconsistent with this order. \n\nTwo global search methods described in @sec-iterative-search, genetic algorithms (GA) and simulated annealing, can also be used. In this instance, the search space is the predictor space represented as binary indicators. The same process applies, though. For example, a GA would contain a population of different subsets, each producing a fitted model. The performance values enable the creation of the next generation via selection, reproduction, and mutation. In the case of simulated annealing, an initial subset is created and evaluated, and perturbations are created by randomly altering a small set of indicators (to create a \"nearby\" subset). Suboptimal subsets can be accepted similarly to our application for tuning parameters. \n\nHowever, for each of these cases, the details matter. First, we should probably use separate data to \n\n- estimate performance for each candidate subset and \n- determining how far the search should proceed.\n\nIf we have large data sets, we can partition them into separate validation sets for each purpose. Otherwise, resampling is probably the answer to solve one or both of these problems. \n\nThe need to optimize tuning parameters can greatly complicate this entire process. A set of optimal parameter values for large subset sizes may perform very poorly for small subsets. In some cases, such as $m_{try}$ and the number of embedding dimensions, the tuning parameter depends on the subset size. \n\nIn this case, the traditional approach uses a nested resampling procedure similar to the one shown in @sec-nested-resampling. An inner resampling scheme tunes the model, and the optimized model is used to predict the assessment set from the outer resample. Even with parallel processing, this can become an onerous computational task. \n\nHowever, let’s illustrate a wrapper method using an artificial data set from the simulations described in @sec-irrelevant-predictors. We’ll use @eq-hooker and supplement the eight truly important predictors with twenty one noise columns. For simplicity, we’ll use a neural network to predict the outcome with a static set of tuning parameters. The training set consisted of 1,000 data points. \n\nSince feature selection is part of the broader model pipeline, 10-fold cross-validation was used to measure the effectiveness of 150 iterations of simulated annealing [@fes Sect 12.2]. A separate SA run is created for each resample; we use the analysis set to train the model on the current subset, and the assessment set is used to measure the RMSE. \n\n@fig-selection-sa shows the results, where each point is the average of the 10 RMSE values for the SA at each iteration. The results clearly improve as the selection process mostly begins to include important predictors and discards a few of the noise columns. After approximately 120 iterations, the solution stabilizes.  This appears to be a very straightforward search process that clearly indicates when to stop the SA search. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![The progress of using simulated annealing to select features for.a neural network. The dashed green line indicators the best RMSE value achievable for these simulated data.](feature-selection_files/figure-html/fig-selection-sa-1.svg){#fig-selection-sa fig-align='center' width=60%}\n:::\n:::\n\n\nHowever, looks can be deceiving. The feature selection process is incredibly variable, and adding or removing an important predictor can cause severe changes in performance. @fig-selection-sa is showing the _average_ change in performance, and the relative smoothness of this curve is somewhat deceiving. \n\n@fig-selection-sa-resamples shows what could have happened by visualizing each of the 10 searches. The results are much more dynamic and significantly vary from resample to resample. Most (but not all) searches contain one or two precipitous drops in the RMSE with many spikes of high errors (caused by a bad permutation of the solution). These cliffs and spikes do not reproducibly occur at the same iteration or in the same way. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![The individual SA runs that make up the data in @fig-selection-sa.](feature-selection_files/figure-html/fig-selection-sa-resamples-1.svg){#fig-selection-sa-resamples fig-align='center' width=100%}\n:::\n:::\n\n\nWe should keep in mind that @fig-selection-sa lets us know where, on average, the search should stop, but our actual search result (that uses the entire training set) is more likely to look like what we see in @fig-selection-sa-resamples.\n\nFor this particular search, the numerically best result occurred at iteration 113 and the final model contained 17 predictors where eight of the twenty noise columns are still contained in the model. Our resampled estimate of the RMSE, at this iteration, was 0.302 (a perfect model would have a value of 0.25). However, the plots of the SA performance profiles indicate a range, probably above 125 iterations, where the results are equivocal.  \n\n<a href=\"https://tidymodels.aml4td.org/chapters/feature-selection.html#sec-wrappers\">{{< fa brands r-project size=Large >}}</a>\n\n## Filter Methods {#sec-filters}\n\nFilters can use any scoring function that quantifies how effectively the predictor predicts the outcome [@kohavi1998wrapper;@duch2006filter]. One method is to use a univariate statistic to evaluate each predictor independently. For example, the area under the ROC curve (@sec-roc) can be computed for a binary classification outcome and a set of numeric predictors. The filter could be applied using these values by pre-defining a threshold for the statistic that defines \"important enough.\" Alternatively, the top $p^*$ predictors can be retained and used in the supervised model. This works well unless predictors have ties in their statistics.  \n\nThe example of using ROC curves raises an interesting question. Should we rank the predictors by their area under the curve or should we convert that analysis to a p-value to see if the area under the curve is greater than 0.5 [@hanley1983method]? Our advice is to do the former. Hypothesis tests and p-values have their uses but the AUC estimates themselves are probably more numerically stable. To factor in uncertainty, we could filter on the lower confidence bound of the AUC.  This is generally true for almost any ranking statistic that has a corresponding p-value. \n\nMultivariate methods can also be used. These simultaneously compute measures of importance for all predictors. This is usually preferred since univariate statistics can be compromised when the predictors are highly correlated and/or have important interaction effects.  \n\nA variety of models have built-in methods for measuring importance. For example: \n\n - MARS [@friedman1991multivariate] and decision trees can compute the importance of each predictor by aggregating the improvement in the objective function when each predictor is used in a split or an artificial feature. \n - Some neural networks can use the values of their coefficients in each layer to compute an aggregate measure of effectiveness for each feature [@garson1991interpreting;@gevrey2003review;@olden2004accurate].\n - Similarly, partial least squares models can compute importance scores from their loading estimates [@wold1993pls;@farres2015comparison]. \n - As mentioned in @sec-interactions-detection, BART (and H-statistics) can measure the importance of individual predictors using the same techniques to discover interaction effects. \n \n There are also model-free tools for computing importance scores from an existing model based on permuting each predictor and measuring how performance metrics change. This approach was initially popularized by the random forest model (@sec-cls-rand-forest) but can be easily extended to any model. See @breiman2001random, @strobl2007bias, and @sec-importance for more details.  There are a few other methods worth mentioning: \n \n - The Relief allgorithm [@kira1992practical;@kononenko1994estimating] and its descendant methods randomly select training set points and use the outcome values of their nearest neighbors to aggregate statistics to measure importance. \n - Minimum redundancy, maximum relevance analysis (MRMR) combines two statistics, one for importance and another for between-predictor correlation, to find a subset that has the best of both quantities [@peng2005feature]. \n \nThere are also tools to help combine multiple filters into a compound score [@karl2023multi]. For example, we may want to blend the number of active predictors and multiple performance characteristics into a single score used to rank different tuning parameter candidates. One way to do this is to use _desirability functions_. These will be described in @sec-multi-objectives, Also, Section [12.3.2](https://bookdown.org/max/FES/genetic-algorithms.html#coercing-sparsity) of @fes shows an example of how desirability functions can be incorporated into feature selection. \n\nOnce an appropriate scoring function is determined, a tuning parameter can be added for how many predictors are to be retained. This is like RFE, but we optimize all the tuning parameters simultaneously and evaluate subsets in a potentially less greedy way. \n\nThere are two potential downsides, though. First, there is still the potential for enormous computational costs, especially if the ranking process is expensive. For example, if we use a grid search, there is significant potential for the same subset size to occur more than once in the grid^[The same issue can also occur with iterative search]. In this case, we are repeating the same importance calculation multiple times. \n\nThe second potential problem is that we will use the same data set to determine optimal parameters and how many features to retain. This could very easily lead to overfitting and/or optimization bias, especially if our training set is not large. \n\n\n\nWe measured the predictors using the standard random forest importance score using the same data as the previous simulated annealing search. The number of features to retain was treated as an additional tuning parameter. Cross-validation was used to select the best candidate from the space-filling design with 50 candidate points. @fig-mlp-rf(a) shows the tuning results. The number of selected predictors appears to have the largest effect on the results; performance worsens as we remove too many features (which probably includes informative ones). It also appears that too much penalization has a negative effect on reducing the RMSE.\n\nThe model with the smallest RMSE selected the top 9 most important predictors, 13 hidden units, a penalty value of 10<sup>-8.78</sup>, a learning rate of 10<sup>-1.47</sup>, and tanh activation. The resampled RMSE associated with the numerically best results was 0.28. When that model was fit on the entire training set, the holdout RMSE estimate was 0.282.  One reason that these two estimates of performance are so close is the relatively high $n_{tr}/p$ ratio (1,000 / 29 $\\approx$ 34.5).\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Panel (a): The results of tuning a variance importance filter and the parameters from a single-layer neural network for predicting the simulated data from @eq-hooker.  Panel (b): The frequency distribution of predictor selection in the 10 folds for the model with the smallest RMSE.](feature-selection_files/figure-html/fig-mlp-rf-1.svg){#fig-mlp-rf fig-align='center' width=100%}\n:::\n:::\n\n\n\n\nRecall that the importance scores are computed on different analysis sets. For the best model, @fig-mlp-rf(b) contains the frequency at which each predictor was selected. For the most part, the importance scores are pretty accurate; almost all informative features are consistently selected across folds. When the final model was fit on the entire training set, a single irrelevant predictor was included in the model (by random change) along with true predictors $x_{1}$, $x_{2}$, $x_{3}$, $x_{4}$, $x_{5}$, $x_{7}$, $x_{9}$, and $x_{10}$. These results are unusually clean, mostly due to the large sample size and relatively small predictor set.\n\nSimilar to the discussion in @sec-resampling-faq, the different predictor sets discovered in the resamples can give us a sense of our results’ consistency. They are \"realizations\" of what _could_ have occurred. Once we fit the final model, we get the _actual_ predictor set. \n\n<a href=\"https://tidymodels.aml4td.org/chapters/feature-selection.html#sec-filters\">{{< fa brands r-project size=Large >}}</a>\n\n## Chapter References {.unnumbered}\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n",
    "supporting": [
      "feature-selection_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.11.0/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}